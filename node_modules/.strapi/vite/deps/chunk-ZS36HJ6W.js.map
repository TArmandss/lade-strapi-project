{
  "version": 3,
  "sources": ["../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/BlocksField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/BooleanField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/CodeSquare.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/CollectionType.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/ComponentField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/DateField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/Discord.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/Discourse.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/DynamicZoneField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/EmailField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/EmptyData.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/EmptyDocuments.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/EmptyPermissions.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/EmptyPictures.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/EnumerationField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/Facebook.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/FeatherSquare.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/GitHub.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/GlassesSquare.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/InformationSquare.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/JsonField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/MarkdownField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/MediaField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/Medium.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/NumberField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/PasswordField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/PlaySquare.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/Reddit.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/RelationField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/SingleType.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/Strapi.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/TextField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/UidField.tsx", "../../../@strapi/content-releases/node_modules/@strapi/icons/src/symbols/X.tsx", "../../../@strapi/content-releases/admin/src/constants.ts", "../../../@strapi/content-releases/admin/src/services/release.ts", "../../../@strapi/content-releases/admin/src/components/ReleaseActionOptions.tsx", "../../../@strapi/content-releases/admin/src/components/ReleaseActionModal.tsx", "../../../@strapi/content-releases/admin/src/components/ReleaseAction.tsx", "../../../@strapi/content-releases/admin/src/components/ReleaseListCell.tsx", "../../../@strapi/content-releases/admin/src/utils/time.ts", "../../../@strapi/content-releases/admin/src/components/ReleaseActionMenu.tsx", "../../../@strapi/content-releases/admin/src/components/ReleasesPanel.tsx", "../../../@strapi/content-releases/admin/src/pluginId.ts", "../../../@strapi/content-releases/admin/src/utils/prefixPluginTranslations.ts", "../../../@strapi/content-releases/admin/src/index.ts"],
  "sourcesContent": ["import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgBlocksField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#EAF5FF\" stroke=\"#B8E1FF\" rx={2.5} />\n    <path\n      fill=\"#0C75AF\"\n      d=\"M14.75 11.75a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3.5 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2M13.75 15a1 1 0 1 0 0 2 1 1 0 0 0 0-2m4.5 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-4.5 4.25a1 1 0 1 0 0 2 1 1 0 0 0 0-2m4.5 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgBlocksField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgBooleanField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#EAFBE7\" stroke=\"#C6F0C2\" rx={2.5} />\n    <path\n      fill=\"#328048\"\n      d=\"M19 11.5h-6a4.5 4.5 0 1 0 0 9h6a4.5 4.5 0 1 0 0-9m0 7a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgBooleanField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgCodeSquare = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path fill=\"#D9822F\" d=\"M0 4a4 4 0 0 1 4-4h24a4 4 0 0 1 4 4v24a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4z\" />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M17.143 18.659v2.912l6.856-3.878v-2.815L17.143 11v2.906l4.16 2.38zm-2.287 0-4.16-2.374 4.16-2.38V11L8 14.877v2.816l6.856 3.878z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgCodeSquare);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgCollectionType = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#4945FF\" stroke=\"#4945FF\" rx={2.5} />\n    <path\n      fill=\"#fff\"\n      d=\"M14.328 14.54v-.083c-.04-.937-.75-1.559-1.787-1.559-1.535 0-2.725 1.57-2.725 3.65 0 1.302.71 2.104 1.846 2.104.961 0 1.787-.545 2.063-1.37h1.752c-.37 1.78-1.922 2.935-3.967 2.935-2.121 0-3.504-1.395-3.504-3.545 0-3.123 1.951-5.344 4.646-5.344 1.94 0 3.41 1.283 3.41 2.96 0 .087 0 .163-.011.251zM20.053 20H18.27l1.489-6.943h-2.532l.311-1.512h6.844l-.31 1.512H21.54z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgCollectionType);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgComponentField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#F6F6F9\" stroke=\"#DCDCE4\" rx={2.5} />\n    <path\n      fill=\"#666687\"\n      d=\"M20.5 17.5c-.358 0-.71.085-1.029.25l-1.337-1.04q.11-.326.116-.67l.647-.214a2.25 2.25 0 1 0-.637-1.37l-.486.162A2.25 2.25 0 0 0 16 13.75c-.062 0-.117 0-.176.008l-.278-.625A2.25 2.25 0 1 0 14 13.75c.063 0 .117 0 .176-.008l.278.625a2.24 2.24 0 0 0-.537 2.482l-1.33 1.182a2.25 2.25 0 1 0 .996 1.12l1.33-1.182a2.25 2.25 0 0 0 2.3-.075l1.224.954A2.25 2.25 0 1 0 20.5 17.5m0-4a.75.75 0 1 1 0 1.5.75.75 0 0 1 0-1.5m-7.25-2a.75.75 0 1 1 1.5 0 .75.75 0 0 1-1.5 0m-1.75 9.25a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5M15.25 16a.75.75 0 1 1 1.5 0 .75.75 0 0 1-1.5 0m5.25 4.5a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgComponentField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgDateField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#FDF4DC\" stroke=\"#FAE7B9\" rx={2.5} />\n    <path\n      fill=\"#D9822F\"\n      d=\"M21 10h-1.5v-.5a.5.5 0 0 0-1 0v.5h-5v-.5a.5.5 0 0 0-1 0v.5H11a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V11a1 1 0 0 0-1-1m0 3H11v-2h1.5v.5a.5.5 0 0 0 1 0V11h5v.5a.5.5 0 0 0 1 0V11H21z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgDateField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgDiscord = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#5865F2\"\n      d=\"M27.107 5.911a26.5 26.5 0 0 0-6.602-2.031 18 18 0 0 0-.845 1.72 24.6 24.6 0 0 0-7.327 0 18 18 0 0 0-.846-1.72A26.7 26.7 0 0 0 4.88 5.916C.702 12.098-.43 18.126.136 24.068a26.6 26.6 0 0 0 8.097 4.065 19.6 19.6 0 0 0 1.734-2.796c-.947-.354-1.86-.79-2.73-1.304.228-.166.452-.337.669-.504a19.02 19.02 0 0 0 16.188 0q.33.271.67.504c-.872.515-1.788.952-2.736 1.306a19.4 19.4 0 0 0 1.734 2.794 26.5 26.5 0 0 0 8.102-4.062c.665-6.892-1.135-12.864-4.757-18.16M10.684 20.414c-1.578 0-2.882-1.433-2.882-3.194 0-1.762 1.259-3.207 2.877-3.207 1.619 0 2.912 1.445 2.885 3.207s-1.271 3.194-2.88 3.194m10.632 0c-1.581 0-2.88-1.433-2.88-3.194 0-1.762 1.259-3.207 2.88-3.207s2.904 1.445 2.877 3.207-1.269 3.194-2.877 3.194\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgDiscord);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgDiscourse = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#231F20\"\n      d=\"M15.659.302C7.158.302 0 7.194 0 15.698v15.943l15.656-.015c8.501 0 15.396-7.158 15.396-15.66 0-8.5-6.901-15.664-15.393-15.664\"\n    />\n    <path\n      fill=\"#FFF9AE\"\n      d=\"M15.81 6.261a9.546 9.546 0 0 0-8.39 14.09l-1.726 5.554 6.2-1.4A9.541 9.541 0 1 0 15.82 6.26z\"\n    />\n    <path\n      fill=\"#00AEEF\"\n      d=\"M23.381 9.999a9.54 9.54 0 0 1-11.487 14.49l-6.2 1.419 6.312-.746A9.54 9.54 0 0 0 23.381 10\"\n    />\n    <path\n      fill=\"#00A94F\"\n      d=\"M21.624 8.239a9.54 9.54 0 0 1-9.91 15.61l-6.02 2.059 6.2-1.404a9.54 9.54 0 0 0 9.73-16.265\"\n    />\n    <path fill=\"#F15D22\" d=\"M7.991 20.562A9.542 9.542 0 0 1 23.387 9.994 9.543 9.543 0 0 0 7.42 20.35l-1.726 5.555z\" />\n    <path fill=\"#E31B23\" d=\"M7.42 20.35A9.543 9.543 0 0 1 21.624 8.238 9.543 9.543 0 0 0 6.832 20.202l-1.135 5.706z\" />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgDiscourse);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgDynamicZoneField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#F6F6F9\" stroke=\"#DCDCE4\" rx={2.5} />\n    <path\n      fill=\"#666687\"\n      d=\"M23.75 16a3.75 3.75 0 0 1-6.402 2.652l-.03-.033-3.742-4.225a2.25 2.25 0 1 0 0 3.212l.193-.218a.75.75 0 1 1 1.125.994l-.21.237-.03.033a3.75 3.75 0 1 1 0-5.304l.03.033 3.742 4.225a2.25 2.25 0 1 0 0-3.212l-.193.218a.751.751 0 1 1-1.125-.995l.21-.236.03-.033A3.75 3.75 0 0 1 23.75 16\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgDynamicZoneField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgEmailField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#FCECEA\" stroke=\"#F5C0B8\" rx={2.5} />\n    <path\n      fill=\"#D02B20\"\n      d=\"M16 9.25a6.75 6.75 0 0 0 0 13.5c1.392 0 2.856-.42 3.915-1.125a.75.75 0 1 0-.83-1.25c-.813.54-1.994.875-3.085.875A5.25 5.25 0 1 1 21.25 16c0 .58-.104 1.067-.293 1.372-.165.265-.375.378-.707.378s-.542-.113-.707-.378c-.187-.305-.293-.791-.293-1.372v-2.5a.75.75 0 0 0-1.468-.216 3.25 3.25 0 1 0 .554 4.973c.433.637 1.09.993 1.914.993 1.542 0 2.5-1.245 2.5-3.25A6.76 6.76 0 0 0 16 9.25m0 8.5a1.75 1.75 0 1 1 0-3.5 1.75 1.75 0 0 1 0 3.5\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgEmailField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgEmptyData = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" viewBox=\"0 0 217 121\" ref={ref} {...props}>\n    <g clipPath=\"url(#EmptyData_svg__a)\">\n      <path\n        stroke=\"#EEEEFA\"\n        strokeDasharray=\"3.93 4.91\"\n        strokeLinecap=\"round\"\n        strokeWidth={0.982}\n        d=\"M1.158 99.652h215.018M1.158 80.015h215.018M1.158 59.397h215.018M1.158 38.779h215.018M1.158 20.124h215.018\"\n      />\n      <path\n        fill=\"#D9D8FF\"\n        fillOpacity={0.8}\n        fillRule=\"evenodd\"\n        d=\"M182.63 25.086c4.112 0 7.446 3.279 7.446 7.323s-3.334 7.324-7.446 7.324h-42.545c4.112 0 7.445 3.279 7.445 7.323s-3.333 7.324-7.445 7.324h23.4c4.112 0 7.445 3.278 7.445 7.323 0 4.044-3.333 7.323-7.445 7.323h-10.821c-5.185 0-9.388 3.28-9.388 7.324q0 2.847 3.162 5.314c1.968 1.536 4.676 1.736 6.861 2.943 2.27 1.255 3.804 3.646 3.804 6.39 0 4.044-3.333 7.323-7.445 7.323H61.376c-4.112 0-7.446-3.279-7.446-7.323s3.334-7.324 7.446-7.324H19.894c-4.112 0-7.445-3.279-7.445-7.323s3.333-7.324 7.445-7.324H62.44c4.112 0 7.445-3.278 7.445-7.323s-3.334-7.324-7.446-7.324H35.85c-4.112 0-7.446-3.278-7.446-7.323 0-4.044 3.334-7.323 7.446-7.323h42.545c-4.112 0-7.445-3.28-7.445-7.324s3.333-7.323 7.445-7.323zm0 29.294c4.112 0 7.446 3.278 7.446 7.323 0 4.044-3.334 7.323-7.446 7.323s-7.445-3.278-7.445-7.323 3.333-7.324 7.445-7.324\"\n        clipRule=\"evenodd\"\n      />\n      <rect\n        width={27}\n        height={79.036}\n        x={109.403}\n        y={33.133}\n        fill=\"#fff\"\n        stroke=\"#7B79FF\"\n        strokeWidth={2.455}\n        rx={4.173}\n      />\n      <rect width={27} height={102.6} x={74.058} y={9.57} fill=\"#fff\" stroke=\"#7B79FF\" strokeWidth={2.455} rx={4.173} />\n      <rect\n        width={27}\n        height={58.418}\n        x={39.203}\n        y={53.26}\n        fill=\"#fff\"\n        stroke=\"#7B79FF\"\n        strokeWidth={2.455}\n        rx={4.173}\n      />\n      <rect\n        width={27}\n        height={55.473}\n        x={144.748}\n        y={56.697}\n        fill=\"#fff\"\n        stroke=\"#7B79FF\"\n        strokeWidth={2.455}\n        rx={4.173}\n      />\n      <rect width={21.6} height={53.018} x={41.903} y={55.961} fill=\"#EEEEFA\" rx={1.964} />\n      <rect width={21.6} height={73.636} x={112.103} y={35.833} fill=\"#EEEEFA\" rx={1.964} />\n    </g>\n    <defs>\n      <clipPath id=\"EmptyData_svg__a\">\n        <path fill=\"#fff\" d=\"M.667.797h216v120h-216z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgEmptyData);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgEmptyDocuments = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" viewBox=\"0 0 217 121\" ref={ref} {...props}>\n    <g clipPath=\"url(#EmptyDocuments_svg__a)\" opacity={0.84}>\n      <path\n        fill=\"#D9D8FF\"\n        fillOpacity={0.8}\n        fillRule=\"evenodd\"\n        d=\"M189.917 20.442a7.583 7.583 0 0 1 0 15.167h-43.334a7.584 7.584 0 1 1 0 15.167h23.834a7.583 7.583 0 0 1 0 15.166h-11.022c-5.281 0-9.562 3.396-9.562 7.584q0 2.934 3.19 5.479c2.017 1.608 4.824 1.818 7.065 3.097a7.584 7.584 0 0 1-3.755 14.174H66.417a7.583 7.583 0 1 1 0-15.167h-42.25a7.583 7.583 0 0 1 0-15.167H67.5a7.583 7.583 0 0 0 0-15.166H40.417a7.583 7.583 0 0 1 0-15.167H83.75a7.583 7.583 0 0 1 0-15.167zm0 30.334a7.583 7.583 0 0 1 0 15.166 7.584 7.584 0 0 1 0-15.166\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        d=\"m133.228 20.443 10.077 73.496.905 7.373a4.33 4.33 0 0 1-3.773 4.829l-63.44 7.79a4.334 4.334 0 0 1-4.83-3.773l-9.766-79.547a2.167 2.167 0 0 1 1.886-2.414l.023-.003 5.263-.59zm-59.4 6.683 4.97-.557z\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        stroke=\"#7B79FF\"\n        strokeWidth={2.5}\n        d=\"m73.829 27.126 4.97-.557m54.429-6.126 10.077 73.496.905 7.373a4.33 4.33 0 0 1-3.773 4.829l-63.44 7.79a4.334 4.334 0 0 1-4.83-3.773l-9.766-79.547a2.167 2.167 0 0 1 1.886-2.414l.023-.003 5.263-.59z\"\n      />\n      <path\n        fill=\"#F0F0FF\"\n        fillRule=\"evenodd\"\n        d=\"m130.485 25.068 9.121 66.607.821 6.683c.264 2.152-1.246 4.109-3.373 4.37l-56.812 6.976c-2.128.261-4.066-1.272-4.33-3.425l-8.83-71.908a2.166 2.166 0 0 1 1.887-2.414l7.028-.863\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        stroke=\"#7B79FF\"\n        strokeWidth={2.5}\n        d=\"M135.998 6.63H86.645a2.97 2.97 0 0 0-2.107.872 2.97 2.97 0 0 0-.873 2.107v82.333c0 .823.334 1.568.873 2.107a2.97 2.97 0 0 0 2.106.872h63.917a2.97 2.97 0 0 0 2.107-.872 2.97 2.97 0 0 0 .872-2.107V24.164a2.98 2.98 0 0 0-.873-2.108L138.104 7.502a2.98 2.98 0 0 0-2.106-.872Z\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        stroke=\"#7B79FF\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2.5}\n        d=\"M136.478 7.879v12.563a3.25 3.25 0 0 0 3.25 3.25h8.595M95.311 78.942h28.167m-28.167-55.25h28.167zm0 13h46.583zm0 14.084h46.583zm0 14.083h46.583z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"EmptyDocuments_svg__a\">\n        <path fill=\"#fff\" d=\"M.667.797h216v120h-216z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgEmptyDocuments);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgEmptyPermissions = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" viewBox=\"0 0 193 121\" ref={ref} {...props}>\n    <g opacity={0.88}>\n      <path\n        fill=\"#DBDBFA\"\n        fillRule=\"evenodd\"\n        d=\"M160.947 53.823a4 4 0 0 0-.15-.281c-3.5-5.96-7.289-11.263-11.52-15.858h18.096c4.445 0 8.048 3.613 8.048 8.07 0 4.456-3.603 8.069-8.048 8.069zm-8.493 16.139c-11.562 11.57-31.953 19.597-55.21 19.597-31.435 0-54.384-16.705-55.701-35.736H29.409c-4.445 0-8.048 3.613-8.048 8.07 0 4.456 3.603 8.069 8.048 8.069h11.697c5.604 0 10.148 3.612 10.148 8.069q0 3.786-4.98 6.963c-.942.601-2.034.876-3.123 1.15-.33.083-.658.166-.983.257a8.07 8.07 0 0 0-5.86 7.768c0 4.457 3.602 8.07 8.047 8.07h95.425c4.445 0 8.048-3.613 8.048-8.07 0-4.456-3.603-8.069-8.048-8.069h44.839c4.444 0 8.048-3.613 8.048-8.07 0-4.456-3.604-8.068-8.048-8.068zM68.723 21.546H8.715c-4.445 0-8.048 3.613-8.048 8.07 0 4.456 3.603 8.068 8.048 8.068h37.314c4.606-6.843 12.5-12.477 22.694-16.138M.667 61.892c0-4.456 3.603-8.069 8.048-8.069 4.444 0 8.047 3.613 8.047 8.07 0 4.456-3.603 8.069-8.047 8.069S.667 66.349.667 61.892\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        stroke=\"#7B79FF\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2.5}\n        d=\"m158.091 49.212 1.446 2.131\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M154.862 59.69c-45.683-57.683-95.639-25.812-117.374.01-1.404 1.668-1.426 4.117-.15 5.882 47.31 65.454 96.71 29.044 117.704-.133 1.24-1.722 1.138-4.094-.18-5.758\"\n      />\n      <path\n        fill=\"#7B79FF\"\n        fillRule=\"evenodd\"\n        d=\"M113.536 28.091c-9.141-2.486-18.085-2.558-26.571-.94-21.301 4.058-39.458 18.707-50.43 31.742-1.794 2.132-1.798 5.217-.206 7.42C48.246 82.798 60.36 92.962 72.218 98.41q1.186.544 2.367 1.027l1.206-2.209a57 57 0 0 1-2.53-1.09c-11.366-5.222-23.168-15.052-34.905-31.291-.961-1.33-.92-3.143.092-4.345 10.764-12.787 28.453-26.985 48.985-30.897 7.905-1.506 16.271-1.495 24.869.745zm-28.277 71.966c7.097 1.397 13.98 1.155 20.536-.279 20.46-4.474 37.826-20.593 48.237-35.062.899-1.25.84-3.007-.146-4.252-10.728-13.547-21.653-22.062-32.351-26.854l1.201-2.2c11.026 4.98 22.21 13.738 33.11 27.502 1.649 2.083 1.795 5.069.215 7.265-10.584 14.708-28.416 31.382-49.732 36.044-7.115 1.556-14.607 1.77-22.323.131z\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        stroke=\"#7B79FF\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2.5}\n        d=\"M127.159 22.08c13.23 6.32 21.864 14.378 27.624 21.78M34.068 48.642C53.002 23.337 89.197 8.3 117.953 18.635\"\n      />\n      <ellipse cx={94.98} cy={66.505} fill=\"#F0F0FF\" rx={18.395} ry={18.444} />\n      <path\n        fill=\"#7B79FF\"\n        fillRule=\"evenodd\"\n        d=\"M104.76 44.362a24 24 0 0 0-9.776-2.067c-13.334 0-24.144 10.838-24.144 24.208 0 8.428 4.296 15.85 10.813 20.186l1.203-2.204c-5.741-3.903-9.516-10.498-9.516-17.982 0-11.995 9.696-21.708 21.644-21.708 3.045 0 5.944.631 8.574 1.77zM91.95 87.999q1.488.211 3.034.212c11.947 0 21.643-9.713 21.643-21.708a21.66 21.66 0 0 0-5.222-14.142l1.272-2.33a24.16 24.16 0 0 1 6.45 16.472c0 13.37-10.809 24.207-24.143 24.207-1.47 0-2.908-.131-4.305-.383z\"\n        clipRule=\"evenodd\"\n      />\n      <path\n        fill=\"#fff\"\n        stroke=\"#7B79FF\"\n        strokeWidth={2.5}\n        d=\"M116.729 54.977c0 4.406-3.562 7.972-7.948 7.972s-7.948-3.566-7.948-7.972 3.562-7.972 7.948-7.972 7.948 3.566 7.948 7.972Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M110.472 33.635c1.275-2.324 4.078-3.019 6.296-1.56 2.264 1.49 3.053 4.654 1.751 7.027l-31.287 57.05c-1.275 2.324-4.079 3.018-6.296 1.559-2.265-1.49-3.053-4.653-1.751-7.027z\"\n      />\n      <rect\n        width={3.668}\n        height={134.376}\n        fill=\"#7B79FF\"\n        rx={1.834}\n        transform=\"matrix(.82817 .56048 -.47918 .87772 127.181 .797)\"\n      />\n    </g>\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgEmptyPermissions);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgEmptyPictures = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={16} height={16} fill=\"none\" viewBox=\"0 0 217 121\" ref={ref} {...props}>\n    <g clipPath=\"url(#EmptyPictures_svg__a)\">\n      <g clipPath=\"url(#EmptyPictures_svg__b)\" opacity={0.88}>\n        <path\n          fill=\"#D9D8FF\"\n          fillOpacity={0.8}\n          fillRule=\"evenodd\"\n          d=\"M119.667 28.797a7 7 0 1 1 0 14h64a7 7 0 1 1 0 14h22a7 7 0 1 1 0 14h-19a7 7 0 1 0 0 14h6a7 7 0 1 1 0 14h-52a7 7 0 0 1-1.5-.161 7 7 0 0 1-1.5.16h-91a7 7 0 0 1 0-14h-39a7 7 0 1 1 0-14h40a7 7 0 0 0 0-14h-25a7 7 0 1 1 0-14h40a7 7 0 1 1 0-14zm90 56a7 7 0 1 1 0 14 7 7 0 0 1 0-14\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          d=\"m74.497 103.07-8.622 1.422a4 4 0 0 1-4.518-3.404L50.224 21.866a4 4 0 0 1 3.404-4.518l78.231-10.994a4 4 0 0 1 4.518 3.404c.474 3.377 2.408 16.468 2.571 17.63\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          fill=\"#F0F0FF\"\n          fillRule=\"evenodd\"\n          d=\"m72.472 99.51-3.696.525a3.62 3.62 0 0 1-4.096-3.085l-9.996-71.925a3.646 3.646 0 0 1 3.097-4.107L128.82 10.82a3.62 3.62 0 0 1 4.096 3.085l.859 6.18 9.206 66.599c.306 2.212-1.22 4.257-3.408 4.566l-.07.01z\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          stroke=\"#7B79FF\"\n          strokeLinecap=\"round\"\n          strokeWidth={2.5}\n          d=\"m69.945 103.92-4.07.572a4 4 0 0 1-4.518-3.405L50.223 21.866a4 4 0 0 1 3.405-4.518l78.231-10.994a4 4 0 0 1 4.518 3.404l.956 6.808M138.167 21.177l.5 3.12\"\n        />\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          stroke=\"#7B79FF\"\n          strokeWidth={2.5}\n          d=\"m165.078 31.096-78.567-8.258a2.74 2.74 0 0 0-2.018.598 2.74 2.74 0 0 0-1.005 1.85l-8.362 79.561a2.748 2.748 0 0 0 2.447 3.023l78.568 8.258a2.74 2.74 0 0 0 2.018-.598 2.74 2.74 0 0 0 1.004-1.85l8.362-79.562a2.74 2.74 0 0 0-.597-2.018 2.74 2.74 0 0 0-1.85-1.004Z\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          d=\"m93.657 31.382 62.655 6.585a3 3 0 0 1 2.67 3.297l-5.54 52.71a3 3 0 0 1-3.298 2.67L87.49 90.059a3 3 0 0 1-2.67-3.297l5.54-52.71a3 3 0 0 1 3.297-2.67\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          fill=\"#F0F0FF\"\n          fillRule=\"evenodd\"\n          d=\"m93.407 74.676 9.798-6.609a4 4 0 0 1 5.167.595l7.174 7.722a1 1 0 0 0 1.362.097l15.34-12.43a4 4 0 0 1 5.877.936l9.981 15.438 1.433 2.392-.686 8.124a1 1 0 0 1-1.107.91l-56.963-6.329a1 1 0 0 1-.885-1.085l.755-8.199z\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          stroke=\"#7B79FF\"\n          strokeWidth={2.5}\n          d=\"m156.181 39.21-62.655-6.585c-.48-.05-.936.099-1.284.38a1.75 1.75 0 0 0-.64 1.178l-5.54 52.71c-.05.48.1.936.381 1.284s.697.588 1.177.639l62.655 6.585c.481.05.936-.099 1.284-.38s.589-.697.639-1.177l5.54-52.71a1.74 1.74 0 0 0-.38-1.284 1.74 1.74 0 0 0-1.177-.64Z\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          fill=\"#F0F0FF\"\n          stroke=\"#7B79FF\"\n          strokeWidth={2.5}\n          d=\"M105.071 56.714a6 6 0 1 0 1.254-11.936 6 6 0 0 0-1.254 11.936Z\"\n        />\n        <path\n          stroke=\"#7B79FF\"\n          strokeLinecap=\"round\"\n          strokeWidth={2.5}\n          d=\"m91.396 76.222 11.809-8.155a4 4 0 0 1 5.167.594l7.174 7.723a1 1 0 0 0 1.362.096l15.34-12.43a4 4 0 0 1 5.877.936l11.064 17.556\"\n        />\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"EmptyPictures_svg__a\">\n        <path fill=\"#fff\" d=\"M.667.797h216v120h-216z\" />\n      </clipPath>\n      <clipPath id=\"EmptyPictures_svg__b\">\n        <path fill=\"#fff\" d=\"M.667.797h216v120h-216z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgEmptyPictures);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgEnumerationField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#F6ECFC\" stroke=\"#E0C1F4\" rx={2.5} />\n    <path\n      fill=\"#9736E8\"\n      d=\"M12.75 12a.75.75 0 0 1 .75-.75h8a.75.75 0 1 1 0 1.5h-8a.75.75 0 0 1-.75-.75m8.75 3.25h-8a.75.75 0 1 0 0 1.5h8a.75.75 0 1 0 0-1.5m0 4h-8a.75.75 0 1 0 0 1.5h8a.75.75 0 1 0 0-1.5M10.75 15a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0-4a1 1 0 1 0 0 2 1 1 0 0 0 0-2m0 8a1 1 0 1 0 0 2 1 1 0 0 0 0-2\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgEnumerationField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgFacebook = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#1977F3\"\n      d=\"M32 16c0-8.836-7.164-16-16-16S0 7.164 0 16c0 7.985 5.85 14.605 13.5 15.807v-11.18H9.437V16H13.5v-3.526c0-4.01 2.39-6.226 6.044-6.226 1.75 0 3.582.313 3.582.313V10.5h-2.018c-1.987 0-2.608 1.233-2.608 2.5V16h4.437l-.709 4.626H18.5v11.18C26.15 30.607 32 23.989 32 16\"\n    />\n    <path\n      fill=\"#FEFEFE\"\n      d=\"M22.228 20.626 22.937 16H18.5v-3.002c0-1.264.619-2.5 2.608-2.5h2.018V6.562s-1.832-.313-3.582-.313c-3.654 0-6.044 2.214-6.044 6.226V16H9.437v4.626H13.5v11.18Q14.724 32 16 32c.85 0 1.685-.068 2.5-.194v-11.18z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgFacebook);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgFeatherSquare = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path fill=\"#9736E8\" d=\"M0 4a4 4 0 0 1 4-4h24a4 4 0 0 1 4 4v24a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4z\" />\n    <path\n      fill=\"#fff\"\n      d=\"M18.037 11.774a28.6 28.6 0 0 0-2.948 2.706c-1.995 2.109-3.55 4.093-4.761 6.06-.289.469-.574.945-.855 1.418a9 9 0 0 0-.463 1.536c-.074.37.275.68.577.395.312-.299.587-.64.851-.985.467-.608.906-1.237 1.342-1.867 3.37.242 7.27-2.048 8.933-4.857a.2.2 0 0 0 .017-.167.18.18 0 0 0-.114-.118c-.809-.27-1.798-.44-2.207-.462-.017 0-.034-.014-.037-.035a.04.04 0 0 1 .024-.043c1.113-.58 1.924-.647 2.877-.505.07.01.134-.046.16-.114.095-.217.356-.87.537-1.404a.2.2 0 0 0-.087-.239c-.71-.384-1.656-.643-2.035-.682-.017 0-.03-.018-.034-.036a.04.04 0 0 1 .024-.043c1.1-.483 1.485-.497 2.364-.302.087.018.17-.05.19-.142.433-1.714.574-3.197.608-3.68a.2.2 0 0 0-.057-.157.18.18 0 0 0-.148-.05c-2.444.356-4.403.865-6.093 1.55-.057.022-.11.072-.11.136.144.551-.242 1.209-.845 1.703a.04.04 0 0 1-.044.018.05.05 0 0 1-.027-.043c.004-.046.158-.665.067-1.116-.013-.064-.033-.125-.084-.16a.17.17 0 0 0-.17-.014c-7.924 3.811-5.922 10.098-5.922 10.098q.015.004.03.007c.895-1.86 1.904-3.232 3.49-5.035 1.178-1.337 2.331-2.425 3.525-3.325.75-.565 2.448-1.738 3.51-2.144a.3.3 0 0 1 .105-.021c.097 0 .177.064.2.16a.26.26 0 0 1-.046.228z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgFeatherSquare);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgGitHub = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#24292F\"\n      fillRule=\"evenodd\"\n      d=\"M15.952 0C7.132 0 0 7.184 0 16.07c0 7.105 4.57 13.118 10.908 15.247.792.16 1.083-.346 1.083-.772 0-.372-.027-1.65-.027-2.98-4.437.958-5.361-1.916-5.361-1.916-.713-1.862-1.77-2.34-1.77-2.34-1.452-.985.106-.985.106-.985 1.61.106 2.456 1.65 2.456 1.65 1.426 2.447 3.724 1.755 4.648 1.33.132-1.038.555-1.757 1.004-2.156-3.54-.372-7.263-1.756-7.263-7.929 0-1.756.634-3.193 1.637-4.31-.158-.399-.713-2.049.16-4.257 0 0 1.346-.426 4.383 1.65 1.3-.352 2.641-.531 3.988-.533 1.347 0 2.72.187 3.988.532 3.038-2.075 4.385-1.65 4.385-1.65.871 2.21.316 3.859.158 4.258 1.03 1.117 1.637 2.554 1.637 4.31 0 6.173-3.723 7.53-7.289 7.93.581.505 1.083 1.463 1.083 2.98 0 2.154-.026 3.884-.026 4.416 0 .426.29.932 1.082.772 6.34-2.13 10.908-8.142 10.908-15.246C31.904 7.184 24.748 0 15.952 0\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgGitHub);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgGlassesSquare = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path fill=\"#AC73E6\" d=\"M0 4a4 4 0 0 1 4-4h24a4 4 0 0 1 4 4v24a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4z\" />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M15.027 13.839c-3.19-.836-6.305-1.064-10.18-.608-1.215.152-1.063 1.975.076 2.203.304.836.456 2.355.912 3.267.987 2.279 5.622 1.975 7.369.835 1.14-.683 1.443-2.279 1.9-3.494.227-.684 1.595-.684 1.822 0 .38 1.215.76 2.81 1.9 3.494 1.747 1.14 6.381 1.444 7.369-.835.456-.912.607-2.431.911-3.267 1.14-.228 1.216-2.051.076-2.203-3.874-.456-6.989-.228-10.18.608-.455.075-1.519.075-1.975 0\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgGlassesSquare);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgInformationSquare = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path fill=\"#4945FF\" d=\"M0 4a4 4 0 0 1 4-4h24a4 4 0 0 1 4 4v24a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4z\" />\n    <path\n      fill=\"#fff\"\n      d=\"M15.733 8c.343 0 .678.108.963.31s.507.49.639.826c.13.337.165.707.098 1.064a1.9 1.9 0 0 1-.474.942 1.7 1.7 0 0 1-.887.504 1.64 1.64 0 0 1-1.002-.105 1.76 1.76 0 0 1-.778-.678A1.9 1.9 0 0 1 14 9.841a1.9 1.9 0 0 1 .508-1.302c.325-.345.766-.539 1.225-.539M20 24h-8v-2.265h2.933v-6.23H12.8v-2.266h4.267v8.496H20z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgInformationSquare);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgJsonField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#EAF5FF\" stroke=\"#B8E1FF\" rx={2.5} />\n    <path\n      fill=\"#0C75AF\"\n      d=\"M11.425 15.468a2.2 2.2 0 0 1-.36.532q.22.24.36.532c.325.67.325 1.457.325 2.218 0 1.621.115 2 1.25 2a.75.75 0 1 1 0 1.5c-1.196 0-2.012-.431-2.425-1.282-.325-.67-.325-1.457-.325-2.218 0-1.621-.115-2-1.25-2a.75.75 0 1 1 0-1.5c1.135 0 1.25-.379 1.25-2 0-.76 0-1.547.325-2.218.413-.85 1.229-1.282 2.425-1.282a.75.75 0 1 1 0 1.5c-1.135 0-1.25.379-1.25 2 0 .76 0 1.547-.325 2.218M23 15.25c-1.135 0-1.25-.379-1.25-2 0-.76 0-1.547-.325-2.218-.413-.85-1.229-1.282-2.425-1.282a.75.75 0 1 0 0 1.5c1.135 0 1.25.379 1.25 2 0 .76 0 1.547.325 2.218q.142.292.363.532a2.2 2.2 0 0 0-.36.532c-.328.67-.328 1.457-.328 2.218 0 1.621-.115 2-1.25 2a.75.75 0 1 0 0 1.5c1.196 0 2.012-.431 2.425-1.282.325-.67.325-1.457.325-2.218 0-1.621.115-2 1.25-2a.75.75 0 1 0 0-1.5\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgJsonField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgMarkdownField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#EAF5FF\" stroke=\"#B8E1FF\" rx={2.5} />\n    <path\n      fill=\"#0C75AF\"\n      d=\"M9.75 12a.75.75 0 0 1 .75-.75h11a.75.75 0 1 1 0 1.5h-11a.75.75 0 0 1-.75-.75m.75 3.25h8a.75.75 0 1 0 0-1.5h-8a.75.75 0 1 0 0 1.5m11 1h-11a.75.75 0 1 0 0 1.5h11a.75.75 0 1 0 0-1.5m-3 2.5h-8a.75.75 0 1 0 0 1.5h8a.75.75 0 1 0 0-1.5\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgMarkdownField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgMediaField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#F6ECFC\" stroke=\"#E0C1F4\" rx={2.5} />\n    <path\n      fill=\"#9736E8\"\n      d=\"M21.5 10.5h-11a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1m-3.75 3a.75.75 0 1 1 0 1.5.75.75 0 0 1 0-1.5m-7.25 7v-1.75l3.25-3.25 5 5zm11 0h-1.336l-2.25-2.25 1.25-1.25 2.336 2.336z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgMediaField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgMedium = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#32324D\"\n      d=\"M18.05 16.007c0 5.019-4.04 9.087-9.025 9.087-4.984 0-9.025-4.07-9.025-9.087C0 10.99 4.04 6.92 9.025 6.92s9.025 4.069 9.025 9.087M27.95 16.007c0 4.724-2.02 8.555-4.512 8.555s-4.513-3.831-4.513-8.555 2.02-8.555 4.513-8.555 4.512 3.83 4.512 8.555M32 16.007c0 4.231-.71 7.664-1.587 7.664s-1.587-3.432-1.587-7.664.71-7.664 1.587-7.664c.876 0 1.587 3.432 1.587 7.664\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgMedium);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgNumberField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#FCECEA\" stroke=\"#F5C0B8\" rx={2.5} />\n    <path\n      fill=\"#D02B20\"\n      d=\"M8.68 20v-6.22h-.096l-1.902 1.322V13.64l2.004-1.392h1.616V20zm3.733 0v-1.09l2.498-2.466c1.09-1.058 1.385-1.45 1.385-1.992v-.017c0-.66-.45-1.122-1.192-1.122-.757 0-1.278.505-1.278 1.24v.028h-1.499l-.005-.022c0-1.488 1.16-2.508 2.857-2.508 1.595 0 2.713.913 2.713 2.25v.016c0 .881-.457 1.612-1.87 2.917l-1.434 1.337v.124h3.416V20zm9.974.172c-1.75 0-2.906-.94-3.013-2.326l-.005-.07h1.552l.005.06c.07.601.623 1.03 1.461 1.03.827 0 1.37-.461 1.37-1.116v-.011c0-.741-.553-1.15-1.493-1.15h-.887v-1.154h.865c.817 0 1.343-.43 1.343-1.059v-.01c0-.645-.446-1.042-1.209-1.042-.762 0-1.273.413-1.337 1.058l-.005.048H19.54l.005-.064c.113-1.386 1.203-2.288 2.83-2.288 1.665 0 2.74.838 2.74 2.073v.01c0 .967-.71 1.596-1.617 1.784v.032c1.155.107 1.907.773 1.907 1.826v.011c0 1.407-1.209 2.358-3.019 2.358\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgNumberField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgPasswordField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#FDF4DC\" stroke=\"#FAE7B9\" rx={2.5} />\n    <path\n      fill=\"#D9822F\"\n      d=\"M21 13h-2v-1.5a3 3 0 0 0-6 0V13h-2a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-7a1 1 0 0 0-1-1m-5 5.25a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5M18 13h-4v-1.5a2 2 0 0 1 4 0z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgPasswordField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgPlaySquare = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path fill=\"#66B7F1\" d=\"M0 4a4 4 0 0 1 4-4h24a4 4 0 0 1 4 4v24a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4z\" />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M12 10.921a.5.5 0 0 1 .773-.419l8.582 5.579a.5.5 0 0 1 0 .838l-8.582 5.579a.5.5 0 0 1-.773-.42z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgPlaySquare);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgReddit = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#FF4500\"\n      d=\"M16 0C7.164 0 0 7.164 0 16a15.95 15.95 0 0 0 4.686 11.314L1.64 30.36c-.605.605-.177 1.639.678 1.639H16c8.836 0 16-7.164 16-16S24.836 0 16 0\"\n    />\n    <path\n      fill=\"#fff\"\n      d=\"M19.255 7.545a2.668 2.668 0 0 0 5.261-.614 2.666 2.666 0 0 0-5.277-.54 4.307 4.307 0 0 0-3.84 4.277v.013c-2.345.099-4.487.767-6.187 1.82a3.736 3.736 0 1 0-3.869 6.34c.124 4.338 4.85 7.826 10.664 7.826s10.547-3.492 10.664-7.833a3.737 3.737 0 0 0-1.602-7.111c-.857 0-1.645.288-2.275.773-1.715-1.061-3.88-1.729-6.25-1.817v-.01a3.16 3.16 0 0 1 2.71-3.121zM9.062 17.829c.063-1.355.963-2.395 2.01-2.395 1.045 0 1.845 1.098 1.783 2.454-.063 1.354-.844 1.847-1.891 1.847S9 19.184 9.062 17.829m11.883-2.395c1.047 0 1.947 1.04 2.009 2.395s-.855 1.906-1.902 1.906-1.828-.491-1.89-1.848c-.063-1.355.735-2.453 1.783-2.453m-1.245 5.53c.196.02.321.224.245.406a4.268 4.268 0 0 1-7.875 0 .296.296 0 0 1 .245-.406c1.15-.116 2.394-.18 3.692-.18 1.3 0 2.542.064 3.693.18\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgReddit);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgRelationField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#F0F0FF\" stroke=\"#D9D8FF\" rx={2.5} />\n    <path\n      fill=\"#4945FF\"\n      d=\"M16.523 19.72a.75.75 0 0 1 0 1.063l-.371.371a3.751 3.751 0 1 1-5.305-5.305l1.507-1.507a3.75 3.75 0 0 1 5.146-.155.753.753 0 0 1-1 1.126 2.25 2.25 0 0 0-3.086.091l-1.506 1.505a2.25 2.25 0 0 0 3.183 3.183l.37-.371a.747.747 0 0 1 1.062 0m4.63-8.874a3.755 3.755 0 0 0-5.305 0l-.371.37a.751.751 0 1 0 1.062 1.063l.372-.37a2.25 2.25 0 1 1 3.182 3.182l-1.507 1.507a2.25 2.25 0 0 1-3.086.09.755.755 0 0 0-1.211.315.75.75 0 0 0 .211.81 3.75 3.75 0 0 0 5.144-.152l1.507-1.507a3.756 3.756 0 0 0 .002-5.307z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgRelationField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgSingleType = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#0C75AF\" stroke=\"#0C75AF\" rx={2.5} />\n    <path\n      fill=\"#fff\"\n      d=\"M8.523 17.586h1.711c.123.727.844 1.195 1.758 1.195.95 0 1.606-.445 1.606-1.107 0-.492-.352-.797-1.266-1.084l-.879-.276c-1.248-.386-1.963-1.218-1.963-2.308 0-1.547 1.418-2.678 3.328-2.678 1.858 0 3.164 1.078 3.217 2.62h-1.67c-.105-.71-.744-1.184-1.617-1.184-.826 0-1.459.433-1.459 1.03 0 .47.34.815 1.137 1.067l.867.27c1.436.451 2.086 1.154 2.086 2.297 0 1.675-1.418 2.789-3.516 2.789-1.922 0-3.234-.99-3.34-2.631M20.107 20h-1.78l1.487-6.943h-2.53l.31-1.512h6.843l-.31 1.512h-2.531z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgSingleType);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgStrapi = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <path\n      fill=\"#4945FF\"\n      d=\"M0 11.093c0-5.23 0-7.844 1.625-9.468C3.249 0 5.864 0 11.093 0h9.814c5.23 0 7.844 0 9.468 1.625C32 3.249 32 5.864 32 11.093v9.814c0 5.23 0 7.844-1.625 9.468C28.751 32 26.136 32 20.907 32h-9.814c-5.23 0-7.844 0-9.468-1.625C0 28.751 0 26.136 0 20.907z\"\n    />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M22.08 9.707H11.307V15.2H16.8v5.493h5.493V9.92a.213.213 0 0 0-.213-.213\"\n      clipRule=\"evenodd\"\n    />\n    <path fill=\"#fff\" d=\"M16.8 15.2h-.213v.213h.213z\" />\n    <path\n      fill=\"#9593FF\"\n      d=\"M11.307 15.2h5.28c.117 0 .213.096.213.213v5.28h-5.28a.213.213 0 0 1-.213-.213zM16.8 20.693h5.493l-5.31 5.312a.107.107 0 0 1-.183-.076zM11.307 15.2H6.07a.107.107 0 0 1-.076-.182l5.312-5.311z\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgStrapi);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgTextField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#EAFBE7\" stroke=\"#C6F0C2\" rx={2.5} />\n    <path\n      fill=\"#328048\"\n      d=\"M13.679 11.18a.75.75 0 0 0-1.358 0l-4 8.5a.75.75 0 0 0 1.357.64l.974-2.07h4.695l.974 2.07a.75.75 0 1 0 1.358-.64zm-2.32 5.57 1.64-3.489 1.643 3.489zm9.14-3c-.865 0-1.547.241-2.027.717a.749.749 0 1 0 1.056 1.063c.188-.187.516-.283.972-.283.584 0 1.074.323 1.21.757a3 3 0 0 0-1.21-.254c-1.516 0-2.75 1.121-2.75 2.5s1.234 2.5 2.75 2.5c.479.001.95-.114 1.375-.336A.75.75 0 0 0 23.25 20v-3.75c0-1.379-1.234-2.5-2.75-2.5m0 5.5c-.687 0-1.25-.449-1.25-1s.563-1 1.25-1 1.25.449 1.25 1-.562 1-1.25 1\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgTextField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgUidField = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <rect width={31} height={23} x={0.5} y={4.5} fill=\"#F0F0FF\" stroke=\"#D9D8FF\" rx={2.5} />\n    <path\n      fill=\"#4945FF\"\n      d=\"M18 9a5.005 5.005 0 0 0-4.756 6.549l-3.598 3.597a.5.5 0 0 0-.146.354V22a.5.5 0 0 0 .5.5h2.5a.5.5 0 0 0 .5-.5v-1h1a.5.5 0 0 0 .5-.5v-1h1a.5.5 0 0 0 .354-.146l.597-.598A5 5 0 1 0 18 9m1.25 4.75a1 1 0 1 1 0-2 1 1 0 0 1 0 2\"\n    />\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgUidField);\nexport default ForwardRef;\n", "import type { SVGProps } from 'react';\nimport { Ref, forwardRef } from 'react';\nconst SvgX = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width={16} height={16} ref={ref} {...props}>\n    <g fillRule=\"evenodd\" clipRule=\"evenodd\">\n      <path\n        fill=\"#FAFAFA\"\n        d=\"M6.566 6.533c.064.092 1.557 2.264 3.317 4.828l3.617 5.268c.23.334.418.614.418.622s-.086.114-.19.234-.4.462-.654.76l-3.258 3.787c-1.153 1.34-1.32 1.534-2.197 2.556-.47.546-.919 1.068-1 1.16s-.146.177-.146.189c0 .014.295.021.83.021h.83l.911-1.062 1.1-1.279a888 888 0 0 0 2.243-2.61c.043-.048.377-.437.744-.864s.676-.787.689-.8l.431-.502a9 9 0 0 1 .424-.478c.009 0 1.164 1.672 2.567 3.717l2.608 3.797.055.08h2.846c2.34.001 2.843-.004 2.834-.027-.01-.025-1.373-2.013-4.87-7.103-2.517-3.665-2.852-4.157-2.843-4.182.01-.024.353-.425 2.607-3.049l1.779-2.07c.062-.07.388-.45.724-.84l1.96-2.283c.027-.035-.02-.038-.814-.038h-.842l-.375.437a1174 1174 0 0 1-2.23 2.594c-.084.096-.506.586-.938 1.09a129 129 0 0 1-1.004 1.167c-.186.22-.374.44-1.239 1.442-.38.44-.399.459-.43.418-.02-.023-1.132-1.64-2.473-3.594L12.16 6.366H6.45zm2.228 1.165 1.186 1.7c1.196 1.71 5.895 8.436 8.917 12.763a421 421 0 0 0 1.783 2.54c.02.022.301.026 1.314.022l1.287-.005-3.37-4.823-5.963-8.534-2.593-3.712-1.3-.005-1.3-.006z\"\n      />\n      <path\n        fill=\"#040404\"\n        d=\"M0 16v16l16.005-.005 16.006-.006.005-15.994L32.022 0H0zm.01.01c0 8.8.003 12.4.006 8s.003-11.6 0-16-.005-.8-.005 8m6.556-9.477c.064.092 1.557 2.264 3.317 4.828l3.617 5.268c.23.334.418.614.418.622s-.086.114-.19.234-.399.462-.654.76l-2.014 2.34-1.244 1.447c-1.153 1.34-1.32 1.534-2.197 2.556-.469.546-.918 1.068-1 1.16-.08.092-.146.177-.146.189 0 .014.295.021.83.021h.83l.911-1.062c.502-.585.996-1.16 1.1-1.279a888 888 0 0 0 2.243-2.61c.043-.048.377-.437.744-.864l.689-.8.431-.502a9 9 0 0 1 .424-.478c.009 0 1.164 1.672 2.567 3.717l2.608 3.797.056.08h2.845c2.34.001 2.843-.004 2.834-.027-.01-.025-1.373-2.013-4.87-7.103-2.517-3.665-2.852-4.157-2.842-4.182.009-.024.352-.425 2.606-3.049l1.78-2.07.723-.84 1.96-2.283c.027-.035-.02-.038-.814-.038h-.842l-.375.437a1129 1129 0 0 1-2.23 2.594c-.084.096-.506.586-.938 1.09a129 129 0 0 1-1.004 1.167c-.186.22-.374.44-1.239 1.442-.38.44-.399.459-.43.418-.02-.023-1.132-1.64-2.473-3.594L12.16 6.366H6.45zm2.228 1.165 1.186 1.7 8.918 12.763a416 416 0 0 0 1.782 2.54c.02.022.301.026 1.314.022l1.287-.005-3.37-4.823-5.963-8.534-2.593-3.712-1.3-.005-1.3-.006z\"\n      />\n    </g>\n  </svg>\n);\nconst ForwardRef = forwardRef(SvgX);\nexport default ForwardRef;\n", "import type { Permission as StrapiPermission } from '@strapi/admin/strapi-admin';\n\nexport const PERMISSIONS = {\n  main: [\n    {\n      action: 'plugin::content-releases.read',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  create: [\n    {\n      action: 'plugin::content-releases.create',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  update: [\n    {\n      action: 'plugin::content-releases.update',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  delete: [\n    {\n      action: 'plugin::content-releases.delete',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  createAction: [\n    {\n      action: 'plugin::content-releases.create-action',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  deleteAction: [\n    {\n      action: 'plugin::content-releases.delete-action',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  publish: [\n    {\n      action: 'plugin::content-releases.publish',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n} satisfies Record<string, StrapiPermission[]>;\n\nexport const PERMISSIONS_SETTINGS = {\n  read: [\n    {\n      action: 'plugin::content-releases.settings.read',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n  update: [\n    {\n      action: 'plugin::content-releases.settings.update',\n      subject: null,\n      id: '',\n      actionParameters: {},\n      properties: {},\n      conditions: [],\n    },\n  ],\n} satisfies Record<string, StrapiPermission[]>;\n", "import { adminApi } from '@strapi/admin/strapi-admin';\n\nimport {\n  CreateReleaseAction,\n  CreateManyReleaseActions,\n  DeleteReleaseAction,\n} from '../../../shared/contracts/release-actions';\n\nimport type {\n  GetReleaseActions,\n  UpdateReleaseAction,\n  ReleaseActionGroupBy,\n} from '../../../shared/contracts/release-actions';\nimport type {\n  CreateRelease,\n  DeleteRelease,\n  GetReleases,\n  GetReleasesByDocumentAttached,\n  UpdateRelease,\n  GetRelease,\n  PublishRelease,\n  MapEntriesToReleases,\n} from '../../../shared/contracts/releases';\nimport type { GetSettings, UpdateSettings } from '../../../shared/contracts/settings';\nimport type { EndpointDefinition } from '@reduxjs/toolkit/query';\n\nexport interface GetReleasesQueryParams {\n  page?: number;\n  pageSize?: number;\n  filters?: {\n    releasedAt?: {\n      // TODO: this should be a boolean, find a way to avoid strings\n      $notNull?: boolean | 'true' | 'false';\n    };\n  };\n}\n\nexport interface GetReleaseActionsQueryParams {\n  page?: number;\n  pageSize?: number;\n  groupBy?: ReleaseActionGroupBy;\n}\n\ntype GetReleasesTabResponse = GetReleases.Response & {\n  meta: {\n    activeTab: 'pending' | 'done';\n  };\n};\n\ntype AnyEndpointDefinition = EndpointDefinition<any, any, any, any>;\n\n// TODO: move this into the admin code & expose an improved version of enhanceEndpoints or a new function\nconst extendInvalidatesTags = (\n  endpoint: AnyEndpointDefinition,\n  extraTags: string[] | { type: string; id: string }[]\n) => {\n  if (!endpoint) {\n    return;\n  }\n\n  const originalInvalidatesTags = endpoint.invalidatesTags;\n\n  const newInvalidatesTags: AnyEndpointDefinition['invalidatesTags'] = (\n    result,\n    err,\n    args,\n    meta\n  ) => {\n    const originalTags =\n      typeof originalInvalidatesTags === 'function'\n        ? originalInvalidatesTags(result, err, args, meta)\n        : originalInvalidatesTags;\n\n    return [...(originalTags ?? []), ...extraTags];\n  };\n\n  Object.assign(endpoint, { invalidatesTags: newInvalidatesTags });\n};\n\nconst releaseApi = adminApi\n  .enhanceEndpoints({\n    addTagTypes: ['Release', 'ReleaseAction', 'EntriesInRelease', 'ReleaseSettings', 'Document'],\n    endpoints: {\n      updateDocument(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n      deleteDocument(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n      deleteManyDocuments(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n      discardDocument(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n      createWorkflow(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n      updateWorkflow(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n      deleteWorkflow(endpoint: AnyEndpointDefinition) {\n        extendInvalidatesTags(endpoint, [\n          { type: 'Release', id: 'LIST' },\n          { type: 'ReleaseAction', id: 'LIST' },\n        ]);\n      },\n    },\n  })\n  .injectEndpoints({\n    endpoints: (build) => {\n      return {\n        getReleasesForEntry: build.query<\n          GetReleasesByDocumentAttached.Response,\n          Partial<GetReleasesByDocumentAttached.Request['query']>\n        >({\n          query(params) {\n            return {\n              url: '/content-releases/getByDocumentAttached',\n              method: 'GET',\n              config: {\n                params,\n              },\n            };\n          },\n          providesTags: (result) =>\n            result\n              ? [\n                  ...result.data.map(({ id }) => ({ type: 'Release' as const, id })),\n                  { type: 'Release', id: 'LIST' },\n                ]\n              : [],\n        }),\n        getReleases: build.query<GetReleasesTabResponse, GetReleasesQueryParams | void>({\n          query(\n            { page, pageSize, filters } = {\n              page: 1,\n              pageSize: 16,\n              filters: {\n                releasedAt: {\n                  $notNull: false,\n                },\n              },\n            }\n          ) {\n            return {\n              url: '/content-releases',\n              method: 'GET',\n              config: {\n                params: {\n                  page: page || 1,\n                  pageSize: pageSize || 16,\n                  filters: filters || {\n                    releasedAt: {\n                      $notNull: false,\n                    },\n                  },\n                },\n              },\n            };\n          },\n          transformResponse(response: GetReleasesTabResponse, meta, arg) {\n            const releasedAtValue = arg?.filters?.releasedAt?.$notNull;\n            const isActiveDoneTab = releasedAtValue === 'true';\n            const newResponse: GetReleasesTabResponse = {\n              ...response,\n              meta: {\n                ...response.meta,\n                activeTab: isActiveDoneTab ? 'done' : 'pending',\n              },\n            };\n\n            return newResponse;\n          },\n          providesTags: (result) =>\n            result\n              ? [\n                  ...result.data.map(({ id }) => ({ type: 'Release' as const, id })),\n                  { type: 'Release', id: 'LIST' },\n                ]\n              : [{ type: 'Release', id: 'LIST' }],\n        }),\n        getRelease: build.query<GetRelease.Response, GetRelease.Request['params']>({\n          query({ id }) {\n            return {\n              url: `/content-releases/${id}`,\n              method: 'GET',\n            };\n          },\n          providesTags: (result, error, arg) => [\n            { type: 'Release', id: 'LIST' },\n            { type: 'Release' as const, id: arg.id },\n          ],\n        }),\n        getReleaseActions: build.query<\n          GetReleaseActions.Response,\n          GetReleaseActions.Request['params'] & GetReleaseActions.Request['query']\n        >({\n          query({ releaseId, ...params }) {\n            return {\n              url: `/content-releases/${releaseId}/actions`,\n              method: 'GET',\n              config: {\n                params,\n              },\n            };\n          },\n          providesTags: [{ type: 'ReleaseAction', id: 'LIST' }],\n        }),\n        createRelease: build.mutation<CreateRelease.Response, CreateRelease.Request['body']>({\n          query(data) {\n            return {\n              url: '/content-releases',\n              method: 'POST',\n              data,\n            };\n          },\n          invalidatesTags: [{ type: 'Release', id: 'LIST' }],\n        }),\n        updateRelease: build.mutation<\n          void,\n          UpdateRelease.Request['params'] & UpdateRelease.Request['body']\n        >({\n          query({ id, ...data }) {\n            return {\n              url: `/content-releases/${id}`,\n              method: 'PUT',\n              data,\n            };\n          },\n          invalidatesTags: (result, error, arg) => [{ type: 'Release', id: arg.id }],\n        }),\n        createReleaseAction: build.mutation<\n          CreateReleaseAction.Response,\n          CreateReleaseAction.Request\n        >({\n          query({ body, params }) {\n            return {\n              url: `/content-releases/${params.releaseId}/actions`,\n              method: 'POST',\n              data: body,\n            };\n          },\n          invalidatesTags: [\n            { type: 'Release', id: 'LIST' },\n            { type: 'ReleaseAction', id: 'LIST' },\n          ],\n        }),\n        createManyReleaseActions: build.mutation<\n          CreateManyReleaseActions.Response,\n          CreateManyReleaseActions.Request\n        >({\n          query({ body, params }) {\n            return {\n              url: `/content-releases/${params.releaseId}/actions/bulk`,\n              method: 'POST',\n              data: body,\n            };\n          },\n          invalidatesTags: [\n            { type: 'Release', id: 'LIST' },\n            { type: 'ReleaseAction', id: 'LIST' },\n            { type: 'EntriesInRelease' },\n          ],\n        }),\n        updateReleaseAction: build.mutation<\n          UpdateReleaseAction.Response,\n          UpdateReleaseAction.Request & { query: GetReleaseActions.Request['query'] } & {\n            actionPath: [string, number];\n          }\n        >({\n          query({ body, params }) {\n            return {\n              url: `/content-releases/${params.releaseId}/actions/${params.actionId}`,\n              method: 'PUT',\n              data: body,\n            };\n          },\n          invalidatesTags: (res, error, arg) => [\n            { type: 'ReleaseAction', id: 'LIST' },\n            { type: 'Release', id: 'LIST' },\n            { type: 'Release', id: arg.params.releaseId },\n          ],\n          async onQueryStarted({ body, params, query, actionPath }, { dispatch, queryFulfilled }) {\n            // We need to mimic the same params received by the getReleaseActions query\n            const paramsWithoutActionId = {\n              releaseId: params.releaseId,\n              ...query,\n            };\n\n            const patchResult = dispatch(\n              releaseApi.util.updateQueryData(\n                'getReleaseActions',\n                paramsWithoutActionId,\n                (draft) => {\n                  const [key, index] = actionPath;\n                  const action = draft.data[key][index];\n\n                  if (action) {\n                    action.type = body.type;\n                  }\n                }\n              )\n            );\n\n            try {\n              await queryFulfilled;\n            } catch {\n              patchResult.undo();\n            }\n          },\n        }),\n        deleteReleaseAction: build.mutation<\n          DeleteReleaseAction.Response,\n          DeleteReleaseAction.Request\n        >({\n          query({ params }) {\n            return {\n              url: `/content-releases/${params.releaseId}/actions/${params.actionId}`,\n              method: 'DELETE',\n            };\n          },\n          invalidatesTags: (result, error, arg) => [\n            { type: 'Release', id: 'LIST' },\n            { type: 'Release', id: arg.params.releaseId },\n            { type: 'ReleaseAction', id: 'LIST' },\n            { type: 'EntriesInRelease' },\n          ],\n        }),\n        publishRelease: build.mutation<PublishRelease.Response, PublishRelease.Request['params']>({\n          query({ id }) {\n            return {\n              url: `/content-releases/${id}/publish`,\n              method: 'POST',\n            };\n          },\n          invalidatesTags: (result, error, arg) => [\n            { type: 'Release', id: arg.id },\n            { type: 'Document', id: `ALL_LIST` },\n          ],\n        }),\n        deleteRelease: build.mutation<DeleteRelease.Response, DeleteRelease.Request['params']>({\n          query({ id }) {\n            return {\n              url: `/content-releases/${id}`,\n              method: 'DELETE',\n            };\n          },\n          invalidatesTags: () => [{ type: 'Release', id: 'LIST' }, { type: 'EntriesInRelease' }],\n        }),\n        getMappedEntriesInReleases: build.query<\n          MapEntriesToReleases.Response['data'],\n          MapEntriesToReleases.Request['query']\n        >({\n          query(params) {\n            return {\n              url: '/content-releases/mapEntriesToReleases',\n              method: 'GET',\n              config: {\n                params,\n              },\n            };\n          },\n          transformResponse(response: MapEntriesToReleases.Response) {\n            return response.data;\n          },\n          providesTags: [{ type: 'EntriesInRelease' }],\n        }),\n        getReleaseSettings: build.query<GetSettings.Response, GetSettings.Request | void>({\n          query: () => '/content-releases/settings',\n          providesTags: [{ type: 'ReleaseSettings' }],\n        }),\n        updateReleaseSettings: build.mutation<void, UpdateSettings.Request['body']>({\n          query(data) {\n            return {\n              url: '/content-releases/settings',\n              method: 'PUT',\n              data,\n            };\n          },\n          invalidatesTags: [{ type: 'ReleaseSettings' }],\n        }),\n      };\n    },\n  });\n\nconst {\n  useGetReleasesQuery,\n  useGetReleasesForEntryQuery,\n  useGetReleaseQuery,\n  useGetReleaseActionsQuery,\n  useCreateReleaseMutation,\n  useCreateReleaseActionMutation,\n  useCreateManyReleaseActionsMutation,\n  useUpdateReleaseMutation,\n  useUpdateReleaseActionMutation,\n  usePublishReleaseMutation,\n  useDeleteReleaseActionMutation,\n  useDeleteReleaseMutation,\n  useGetMappedEntriesInReleasesQuery,\n  useGetReleaseSettingsQuery,\n  useUpdateReleaseSettingsMutation,\n} = releaseApi;\n\nexport {\n  useGetReleasesQuery,\n  useGetReleasesForEntryQuery,\n  useGetReleaseQuery,\n  useGetReleaseActionsQuery,\n  useCreateReleaseMutation,\n  useCreateReleaseActionMutation,\n  useCreateManyReleaseActionsMutation,\n  useUpdateReleaseMutation,\n  useUpdateReleaseActionMutation,\n  usePublishReleaseMutation,\n  useDeleteReleaseActionMutation,\n  useDeleteReleaseMutation,\n  useGetMappedEntriesInReleasesQuery,\n  useGetReleaseSettingsQuery,\n  useUpdateReleaseSettingsMutation,\n  releaseApi,\n};\n", "import * as React from 'react';\n\nimport { VisuallyHidden, Field, Flex } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\ninterface FieldWrapperProps extends Field.Props {\n  actionType: 'publish' | 'unpublish';\n}\n\nconst getBorderLeftRadiusValue = (actionType: FieldWrapperProps['actionType']) => {\n  return actionType === 'publish' ? 1 : 0;\n};\n\nconst getBorderRightRadiusValue = (actionType: FieldWrapperProps['actionType']) => {\n  return actionType === 'publish' ? 0 : 1;\n};\n\nconst FieldWrapper = styled(Field.Root)<{\n  $actionType: 'publish' | 'unpublish';\n}>`\n  border-top-left-radius: ${({ $actionType, theme }) =>\n    theme.spaces[getBorderLeftRadiusValue($actionType)]};\n  border-bottom-left-radius: ${({ $actionType, theme }) =>\n    theme.spaces[getBorderLeftRadiusValue($actionType)]};\n  border-top-right-radius: ${({ $actionType, theme }) =>\n    theme.spaces[getBorderRightRadiusValue($actionType)]};\n  border-bottom-right-radius: ${({ $actionType, theme }) =>\n    theme.spaces[getBorderRightRadiusValue($actionType)]};\n\n  > label {\n    color: inherit;\n    padding: ${({ theme }) => `${theme.spaces[2]} ${theme.spaces[3]}`};\n    text-align: center;\n    vertical-align: middle;\n    text-transform: capitalize;\n  }\n\n  &[data-checked='true'] {\n    color: ${({ theme, $actionType }) =>\n      $actionType === 'publish' ? theme.colors.primary700 : theme.colors.danger600};\n    background-color: ${({ theme, $actionType }) =>\n      $actionType === 'publish' ? theme.colors.primary100 : theme.colors.danger100};\n    border-color: ${({ theme, $actionType }) =>\n      $actionType === 'publish' ? theme.colors.primary700 : theme.colors.danger600};\n  }\n\n  &[data-checked='false'] {\n    border-left: ${({ $actionType }) => $actionType === 'unpublish' && 'none'};\n    border-right: ${({ $actionType }) => $actionType === 'publish' && 'none'};\n  }\n\n  &[data-checked='false'][data-disabled='false']:hover {\n    color: ${({ theme }) => theme.colors.neutral700};\n    background-color: ${({ theme }) => theme.colors.neutral100};\n    border-color: ${({ theme }) => theme.colors.neutral200};\n\n    & > label {\n      cursor: pointer;\n    }\n  }\n\n  &[data-disabled='true'] {\n    color: ${({ theme }) => theme.colors.neutral600};\n    background-color: ${({ theme }) => theme.colors.neutral150};\n    border-color: ${({ theme }) => theme.colors.neutral300};\n  }\n`;\n\ninterface ActionOptionProps {\n  selected: 'publish' | 'unpublish';\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n  disabled?: boolean;\n}\n\ninterface OptionProps extends ActionOptionProps {\n  actionType: 'publish' | 'unpublish';\n}\n\nconst ActionOption = ({\n  selected,\n  actionType,\n  handleChange,\n  name,\n  disabled = false,\n}: OptionProps) => {\n  return (\n    <FieldWrapper\n      $actionType={actionType}\n      background=\"primary0\"\n      borderColor=\"neutral200\"\n      color={selected === actionType ? 'primary600' : 'neutral600'}\n      position=\"relative\"\n      cursor=\"pointer\"\n      data-checked={selected === actionType}\n      data-disabled={disabled && selected !== actionType}\n    >\n      <Field.Label>\n        <VisuallyHidden>\n          <Field.Input\n            type=\"radio\"\n            name={name}\n            checked={selected === actionType}\n            onChange={handleChange}\n            value={actionType}\n            disabled={disabled}\n          />\n        </VisuallyHidden>\n        {actionType}\n      </Field.Label>\n    </FieldWrapper>\n  );\n};\n\nexport const ReleaseActionOptions = ({\n  selected,\n  handleChange,\n  name,\n  disabled = false,\n}: ActionOptionProps) => {\n  return (\n    <Flex>\n      <ActionOption\n        actionType=\"publish\"\n        selected={selected}\n        handleChange={handleChange}\n        name={name}\n        disabled={disabled}\n      />\n      <ActionOption\n        actionType=\"unpublish\"\n        selected={selected}\n        handleChange={handleChange}\n        name={name}\n        disabled={disabled}\n      />\n    </Flex>\n  );\n};\n", "import * as React from 'react';\n\nimport {\n  useAPIErrorHandler,\n  useNotification,\n  useQueryParams,\n  useRBAC,\n  isFetchError,\n} from '@strapi/admin/strapi-admin';\nimport { unstable_useDocumentLayout as useDocumentLayout } from '@strapi/content-manager/strapi-admin';\nimport {\n  Box,\n  Button,\n  Flex,\n  SingleSelect,\n  SingleSelectOption,\n  EmptyStateLayout,\n  LinkButton,\n  Field,\n  Modal,\n} from '@strapi/design-system';\nimport { PaperPlane } from '@strapi/icons';\nimport { EmptyDocuments } from '@strapi/icons/symbols';\nimport { useFormik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport * as yup from 'yup';\n\nimport { CreateReleaseAction } from '../../../shared/contracts/release-actions';\nimport { PERMISSIONS } from '../constants';\nimport { useCreateReleaseActionMutation, useGetReleasesForEntryQuery } from '../services/release';\n\nimport { ReleaseActionOptions } from './ReleaseActionOptions';\n\nimport type {\n  DocumentActionComponent,\n  DocumentActionProps,\n} from '@strapi/content-manager/strapi-admin';\nimport type { UID } from '@strapi/types';\n\n/* -------------------------------------------------------------------------------------------------\n * AddActionToReleaseModal\n * -----------------------------------------------------------------------------------------------*/\nexport const RELEASE_ACTION_FORM_SCHEMA = yup.object().shape({\n  type: yup.string().oneOf(['publish', 'unpublish']).required(),\n  releaseId: yup.string().required(),\n});\n\nexport interface FormValues {\n  type: CreateReleaseAction.Request['body']['type'];\n  releaseId: CreateReleaseAction.Request['params']['releaseId'];\n}\n\nexport const INITIAL_VALUES = {\n  type: 'publish',\n  releaseId: '',\n} satisfies FormValues;\n\ninterface AddActionToReleaseModalProps {\n  contentType: string;\n  documentId?: string;\n  onInputChange: (field: keyof FormValues, value: string | number) => void;\n  values: FormValues;\n}\n\nexport const NoReleases = () => {\n  const { formatMessage } = useIntl();\n  return (\n    <EmptyStateLayout\n      icon={<EmptyDocuments width=\"16rem\" />}\n      content={formatMessage({\n        id: 'content-releases.content-manager-edit-view.add-to-release.no-releases-message',\n        defaultMessage:\n          'No available releases. Open the list of releases and create a new one from there.',\n      })}\n      action={\n        <LinkButton\n          to={{\n            pathname: '/plugins/content-releases',\n          }}\n          tag={ReactRouterLink}\n          variant=\"secondary\"\n        >\n          {formatMessage({\n            id: 'content-releases.content-manager-edit-view.add-to-release.redirect-button',\n            defaultMessage: 'Open the list of releases',\n          })}\n        </LinkButton>\n      }\n      shadow=\"none\"\n    />\n  );\n};\n\nconst AddActionToReleaseModal = ({\n  contentType,\n  documentId,\n  onInputChange,\n  values,\n}: AddActionToReleaseModalProps) => {\n  const { formatMessage } = useIntl();\n  const [{ query }] = useQueryParams<{ plugins?: { i18n?: { locale?: string } } }>();\n  const locale = query.plugins?.i18n?.locale;\n\n  // Get all 'pending' releases that do not have the entry attached\n  const response = useGetReleasesForEntryQuery({\n    contentType,\n    entryDocumentId: documentId,\n    hasEntryAttached: false,\n    locale,\n  });\n\n  const releases = response.data?.data;\n\n  if (releases?.length === 0) {\n    return <NoReleases />;\n  }\n\n  return (\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n      <Box paddingBottom={6}>\n        <Field.Root required>\n          <Field.Label>\n            {formatMessage({\n              id: 'content-releases.content-manager-edit-view.add-to-release.select-label',\n              defaultMessage: 'Select a release',\n            })}\n          </Field.Label>\n          <SingleSelect\n            required\n            placeholder={formatMessage({\n              id: 'content-releases.content-manager-edit-view.add-to-release.select-placeholder',\n              defaultMessage: 'Select',\n            })}\n            name=\"releaseId\"\n            onChange={(value) => onInputChange('releaseId', value)}\n            value={values.releaseId}\n          >\n            {releases?.map((release) => (\n              <SingleSelectOption key={release.id} value={release.id}>\n                {release.name}\n              </SingleSelectOption>\n            ))}\n          </SingleSelect>\n        </Field.Root>\n      </Box>\n      <Field.Label>\n        {formatMessage({\n          id: 'content-releases.content-manager-edit-view.add-to-release.action-type-label',\n          defaultMessage: 'What do you want to do with this entry?',\n        })}\n      </Field.Label>\n      <ReleaseActionOptions\n        selected={values.type}\n        handleChange={(e) => onInputChange('type', e.target.value)}\n        name=\"type\"\n      />\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ReleaseActionModalForm\n * -----------------------------------------------------------------------------------------------*/\n\nconst ReleaseActionModalForm: DocumentActionComponent = ({\n  documentId,\n  document,\n  model,\n  collectionType,\n}: DocumentActionProps) => {\n  const { formatMessage } = useIntl();\n  const { allowedActions } = useRBAC(PERMISSIONS);\n  const { canCreateAction } = allowedActions;\n  const [createReleaseAction, { isLoading }] = useCreateReleaseActionMutation();\n  const { toggleNotification } = useNotification();\n  const { formatAPIError } = useAPIErrorHandler();\n  const [{ query }] = useQueryParams<{ plugins?: { i18n?: { locale?: string } } }>();\n  const locale = query.plugins?.i18n?.locale;\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>, onClose: () => void) => {\n    try {\n      await formik.handleSubmit(e);\n      onClose();\n    } catch (error) {\n      if (isFetchError(error)) {\n        // Handle axios error\n        toggleNotification({\n          type: 'danger',\n          message: formatAPIError(error),\n        });\n      } else {\n        // Handle generic error\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage({\n            id: 'notification.error',\n            defaultMessage: 'An error occurred',\n          }),\n        });\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: INITIAL_VALUES,\n    validationSchema: RELEASE_ACTION_FORM_SCHEMA,\n    onSubmit: async (values: FormValues) => {\n      if (collectionType === 'collection-types' && !documentId) {\n        throw new Error('Document id is required');\n      }\n\n      const response = await createReleaseAction({\n        body: {\n          type: values.type,\n          contentType: model as UID.ContentType,\n          entryDocumentId: documentId,\n          locale,\n        },\n        params: { releaseId: values.releaseId },\n      });\n\n      if ('data' in response) {\n        // Handle success\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({\n            id: 'content-releases.content-manager-edit-view.add-to-release.notification.success',\n            defaultMessage: 'Entry added to release',\n          }),\n        });\n\n        return;\n      }\n\n      if ('error' in response) {\n        throw response.error;\n      }\n    },\n  });\n\n  const {\n    edit: { options },\n  } = useDocumentLayout(model);\n\n  // Project is not EE or contentType does not have draftAndPublish enabled\n  if (!window.strapi.isEE || !options?.draftAndPublish || !canCreateAction) {\n    return null;\n  }\n\n  if (collectionType === 'collection-types' && (!documentId || documentId === 'create')) {\n    return null;\n  }\n\n  return {\n    label: formatMessage({\n      id: 'content-releases.content-manager-edit-view.add-to-release',\n      defaultMessage: 'Add to release',\n    }),\n    icon: <PaperPlane />,\n    // Entry is creating so we don't want to allow adding it to a release\n    disabled: !document,\n    position: ['panel', 'table-row'],\n    dialog: {\n      type: 'modal',\n      title: formatMessage({\n        id: 'content-releases.content-manager-edit-view.add-to-release',\n        defaultMessage: 'Add to release',\n      }),\n      content: (\n        <AddActionToReleaseModal\n          contentType={model}\n          documentId={documentId}\n          onInputChange={formik.setFieldValue}\n          values={formik.values}\n        />\n      ),\n      footer: ({ onClose }) => (\n        <Modal.Footer>\n          <Button onClick={onClose} variant=\"tertiary\" name=\"cancel\">\n            {formatMessage({\n              id: 'content-releases.content-manager-edit-view.add-to-release.cancel-button',\n              defaultMessage: 'Cancel',\n            })}\n          </Button>\n          <Button\n            type=\"submit\"\n            // @ts-expect-error - formik ReactEvent types don't match button onClick types as they expect a MouseEvent\n            onClick={(e) => handleSubmit(e, onClose)}\n            disabled={!formik.values.releaseId}\n            loading={isLoading}\n          >\n            {formatMessage({\n              id: 'content-releases.content-manager-edit-view.add-to-release.continue-button',\n              defaultMessage: 'Continue',\n            })}\n          </Button>\n        </Modal.Footer>\n      ),\n    },\n  };\n};\n\nexport { ReleaseActionModalForm };\n", "import * as React from 'react';\n\nimport {\n  useAPIErrorHandler,\n  useNotification,\n  useQueryParams,\n  useRBAC,\n  isFetchError,\n} from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Button,\n  Flex,\n  SingleSelect,\n  SingleSelectOption,\n  Modal,\n  Field,\n} from '@strapi/design-system';\nimport { Formik, Form } from 'formik';\nimport { useIntl } from 'react-intl';\n\nimport { CreateManyReleaseActions } from '../../../shared/contracts/release-actions';\nimport { PERMISSIONS as releasePermissions } from '../constants';\nimport { useCreateManyReleaseActionsMutation, useGetReleasesQuery } from '../services/release';\n\nimport {\n  type FormValues,\n  INITIAL_VALUES,\n  RELEASE_ACTION_FORM_SCHEMA,\n  NoReleases,\n} from './ReleaseActionModal';\nimport { ReleaseActionOptions } from './ReleaseActionOptions';\n\nimport type { BulkActionComponent } from '@strapi/content-manager/strapi-admin';\nimport type { UID } from '@strapi/types';\n\nconst getContentPermissions = (subject: string) => {\n  const permissions = {\n    publish: [\n      {\n        action: 'plugin::content-manager.explorer.publish',\n        subject,\n        id: '',\n        actionParameters: {},\n        properties: {},\n        conditions: [],\n      },\n    ],\n  };\n\n  return permissions;\n};\n\nconst ReleaseAction: BulkActionComponent = ({ documents, model }) => {\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const { formatAPIError } = useAPIErrorHandler();\n  const [{ query }] = useQueryParams<{ plugins?: { i18n?: { locale?: string } } }>();\n  const contentPermissions = getContentPermissions(model);\n  const {\n    allowedActions: { canPublish },\n  } = useRBAC(contentPermissions);\n  const {\n    allowedActions: { canCreate },\n  } = useRBAC(releasePermissions);\n\n  // Get all the releases not published\n  const response = useGetReleasesQuery();\n  const releases = response.data?.data;\n  const [createManyReleaseActions, { isLoading }] = useCreateManyReleaseActionsMutation();\n  const documentIds = documents.map((doc) => doc.documentId);\n\n  const handleSubmit = async (values: FormValues) => {\n    const locale = query.plugins?.i18n?.locale;\n\n    const releaseActionEntries: CreateManyReleaseActions.Request['body'] = documentIds.map(\n      (entryDocumentId) => ({\n        type: values.type,\n        contentType: model as UID.ContentType,\n        entryDocumentId,\n        locale,\n      })\n    );\n\n    const response = await createManyReleaseActions({\n      body: releaseActionEntries,\n      params: { releaseId: values.releaseId },\n    });\n\n    if ('data' in response) {\n      // Handle success\n\n      const notificationMessage = formatMessage(\n        {\n          id: 'content-releases.content-manager-list-view.add-to-release.notification.success.message',\n          defaultMessage:\n            '{entriesAlreadyInRelease} out of {totalEntries} entries were already in the release.',\n        },\n        {\n          entriesAlreadyInRelease: response.data.meta.entriesAlreadyInRelease,\n          totalEntries: response.data.meta.totalEntries,\n        }\n      );\n\n      const notification = {\n        type: 'success' as const,\n        title: formatMessage(\n          {\n            id: 'content-releases.content-manager-list-view.add-to-release.notification.success.title',\n            defaultMessage: 'Successfully added to release.',\n          },\n          {\n            entriesAlreadyInRelease: response.data.meta.entriesAlreadyInRelease,\n            totalEntries: response.data.meta.totalEntries,\n          }\n        ),\n        message: response.data.meta.entriesAlreadyInRelease ? notificationMessage : '',\n      };\n\n      toggleNotification(notification);\n\n      return true;\n    }\n\n    if ('error' in response) {\n      if (isFetchError(response.error)) {\n        // Handle fetch error\n        toggleNotification({\n          type: 'warning',\n          message: formatAPIError(response.error),\n        });\n      } else {\n        // Handle generic error\n        toggleNotification({\n          type: 'warning',\n          message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n        });\n      }\n    }\n  };\n\n  if (!canCreate || !canPublish) return null;\n\n  return {\n    actionType: 'release',\n    variant: 'tertiary',\n    label: formatMessage({\n      id: 'content-manager-list-view.add-to-release',\n      defaultMessage: 'Add to Release',\n    }),\n    dialog: {\n      type: 'modal',\n      title: formatMessage({\n        id: 'content-manager-list-view.add-to-release',\n        defaultMessage: 'Add to Release',\n      }),\n      content: ({ onClose }) => {\n        return (\n          <Formik\n            onSubmit={async (values) => {\n              const data = await handleSubmit(values);\n              if (data) {\n                return onClose();\n              }\n            }}\n            validationSchema={RELEASE_ACTION_FORM_SCHEMA}\n            initialValues={INITIAL_VALUES}\n          >\n            {({ values, setFieldValue }) => (\n              <Form>\n                {releases?.length === 0 ? (\n                  <NoReleases />\n                ) : (\n                  <Modal.Body>\n                    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n                      <Box paddingBottom={6}>\n                        <Field.Root required>\n                          <Field.Label>\n                            {formatMessage({\n                              id: 'content-releases.content-manager-list-view.add-to-release.select-label',\n                              defaultMessage: 'Select a release',\n                            })}\n                          </Field.Label>\n                          <SingleSelect\n                            placeholder={formatMessage({\n                              id: 'content-releases.content-manager-list-view.add-to-release.select-placeholder',\n                              defaultMessage: 'Select',\n                            })}\n                            onChange={(value) => setFieldValue('releaseId', value)}\n                            value={values.releaseId}\n                          >\n                            {releases?.map((release) => (\n                              <SingleSelectOption key={release.id} value={release.id}>\n                                {release.name}\n                              </SingleSelectOption>\n                            ))}\n                          </SingleSelect>\n                        </Field.Root>\n                      </Box>\n                      <Field.Label>\n                        {formatMessage({\n                          id: 'content-releases.content-manager-list-view.add-to-release.action-type-label',\n                          defaultMessage: 'What do you want to do with these entries?',\n                        })}\n                      </Field.Label>\n                      <ReleaseActionOptions\n                        selected={values.type}\n                        handleChange={(e) => setFieldValue('type', e.target.value)}\n                        name=\"type\"\n                      />\n                    </Flex>\n                  </Modal.Body>\n                )}\n                <Modal.Footer>\n                  <Button onClick={onClose} variant=\"tertiary\" name=\"cancel\">\n                    {formatMessage({\n                      id: 'content-releases.content-manager-list-view.add-to-release.cancel-button',\n                      defaultMessage: 'Cancel',\n                    })}\n                  </Button>\n                  {/** * TODO: Ideally we would use isValid from Formik to disable the button,\n                  however currently it always returns true * for yup.string().required(), even when\n                  the value is falsy (including empty string) */}\n                  <Button type=\"submit\" disabled={!values.releaseId} loading={isLoading}>\n                    {formatMessage({\n                      id: 'content-releases.content-manager-list-view.add-to-release.continue-button',\n                      defaultMessage: 'Continue',\n                    })}\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        );\n      },\n    },\n  };\n};\n\nexport { ReleaseAction };\n", "import * as React from 'react';\n\nimport { useTable, useQueryParams } from '@strapi/admin/strapi-admin';\nimport { ListFieldLayout, ListLayout } from '@strapi/content-manager/strapi-admin';\nimport { Box, Popover, Typography, Button, Link } from '@strapi/design-system';\nimport { CaretDown } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { useGetMappedEntriesInReleasesQuery } from '../services/release';\n\nimport type { Modules, UID } from '@strapi/types';\n\n/* -------------------------------------------------------------------------------------------------\n * useReleasesList\n * -----------------------------------------------------------------------------------------------*/\ninterface QueryParams {\n  plugins?: {\n    i18n?: {\n      locale: string;\n    };\n  };\n}\n\nconst useReleasesList = (contentTypeUid: UID.ContentType, documentId: Modules.Documents.ID) => {\n  const listViewData = useTable('ListView', (state) => state.rows);\n  const documentIds = listViewData.map((entry) => entry.documentId);\n  const [{ query }] = useQueryParams();\n  const locale = (query as QueryParams)?.plugins?.i18n?.locale || undefined;\n\n  const response = useGetMappedEntriesInReleasesQuery(\n    { contentTypeUid, documentIds, locale },\n    { skip: !documentIds || !contentTypeUid || documentIds.length === 0 }\n  );\n\n  const mappedEntriesInReleases = response.data || {};\n\n  return mappedEntriesInReleases?.[documentId] || [];\n};\n\n/* -------------------------------------------------------------------------------------------------\n * addColumnToTableHook\n * -----------------------------------------------------------------------------------------------*/\n\ninterface AddColumnToTableHookArgs {\n  layout: ListLayout;\n  displayedHeaders: ListFieldLayout[];\n}\n\nconst addColumnToTableHook = ({ displayedHeaders, layout }: AddColumnToTableHookArgs) => {\n  const { options } = layout;\n\n  if (!options?.draftAndPublish) {\n    return { displayedHeaders, layout };\n  }\n\n  return {\n    displayedHeaders: [\n      ...displayedHeaders,\n      {\n        searchable: false,\n        sortable: false,\n        name: 'releases',\n        label: {\n          id: 'content-releases.content-manager.list-view.releases.header',\n          defaultMessage: 'To be released in',\n        },\n        cellFormatter: (\n          props: Modules.Documents.AnyDocument,\n          _: any,\n          { model }: { model: UID.ContentType }\n        ) => <ReleaseListCell {...props} model={model} />,\n      },\n    ],\n    layout,\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ReleaseListCell\n * -----------------------------------------------------------------------------------------------*/\n\ninterface ReleaseListCellProps extends Modules.Documents.AnyDocument {\n  documentId: Modules.Documents.ID;\n  model: UID.ContentType;\n}\n\nconst ReleaseListCell = ({ documentId, model }: ReleaseListCellProps) => {\n  const releases = useReleasesList(model, documentId);\n  const { formatMessage } = useIntl();\n\n  return (\n    <Popover.Root>\n      <Popover.Trigger>\n        <Button\n          variant=\"ghost\"\n          onClick={(e: React.MouseEvent<HTMLElement>) => e.stopPropagation()}\n          // TODO: find a way in the DS to define the widht and height of the icon\n          endIcon={releases.length > 0 ? <CaretDown width=\"1.2rem\" height=\"1.2rem\" /> : null}\n        >\n          <Typography\n            style={{ maxWidth: '252px', cursor: 'pointer' }}\n            textColor=\"neutral800\"\n            fontWeight=\"regular\"\n          >\n            {releases.length > 0\n              ? formatMessage(\n                  {\n                    id: 'content-releases.content-manager.list-view.releases-number',\n                    defaultMessage: '{number} {number, plural, one {release} other {releases}}',\n                  },\n                  {\n                    number: releases.length,\n                  }\n                )\n              : '-'}\n          </Typography>\n        </Button>\n      </Popover.Trigger>\n      <Popover.Content>\n        <ul>\n          {releases.map(({ id, name }) => (\n            <Box key={id} padding={3} tag=\"li\">\n              <Link href={`/admin/plugins/content-releases/${id}`} isExternal={false}>\n                {name}\n              </Link>\n            </Box>\n          ))}\n        </ul>\n      </Popover.Content>\n    </Popover.Root>\n  );\n};\n\nexport { ReleaseListCell, addColumnToTableHook };\nexport type { ReleaseListCellProps };\n", "export const getTimezoneOffset = (timezone: string, date: Date) => {\n  try {\n    const offsetPart = new Intl.DateTimeFormat('en', {\n      timeZone: timezone,\n      timeZoneName: 'longOffset',\n    })\n      .formatToParts(date)\n      .find((part) => part.type === 'timeZoneName');\n\n    const offset = offsetPart ? offsetPart.value : '';\n\n    // We want to show time based on UTC, not GMT so we swap that.\n    let utcOffset = offset.replace('GMT', 'UTC');\n\n    // For perfect UTC (UTC+0:00) we only get the string UTC, So we need to append the 0's.\n    if (!utcOffset.includes('+') && !utcOffset.includes('-')) {\n      utcOffset = `${utcOffset}+00:00`;\n    }\n\n    return utcOffset;\n  } catch (error) {\n    // When timezone is invalid we catch the error and return empty to don't break the app\n    return '';\n  }\n};\n\ninterface ITimezoneOption {\n  offset: string;\n  value: string;\n}\n\nexport const getTimezones = (selectedDate: Date) => {\n  const timezoneList: ITimezoneOption[] = Intl.supportedValuesOf('timeZone').map((timezone) => {\n    // Timezone will be in the format GMT${OFFSET} where offset could be nothing,\n    // a four digit string e.g. +05:00 or -08:00\n    const utcOffset = getTimezoneOffset(timezone, selectedDate);\n\n    // Offset and timezone are concatenated with '&', so to split and save the required timezone in DB\n    return { offset: utcOffset, value: `${utcOffset}&${timezone}` } satisfies ITimezoneOption;\n  });\n\n  const systemTimezone = timezoneList.find(\n    (timezone) => timezone.value.split('&')[1] === Intl.DateTimeFormat().resolvedOptions().timeZone\n  );\n\n  return { timezoneList, systemTimezone };\n};\n", "import * as React from 'react';\n\nimport {\n  useAPIErrorHandler,\n  useNotification,\n  useAuth,\n  useRBAC,\n  isFetchError,\n} from '@strapi/admin/strapi-admin';\nimport { Flex, Typography, Menu, AccessibleIcon } from '@strapi/design-system';\nimport { Cross, More, Pencil } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { DeleteReleaseAction, ReleaseAction } from '../../../shared/contracts/release-actions';\nimport { Release } from '../../../shared/contracts/releases';\nimport { PERMISSIONS } from '../constants';\nimport { useDeleteReleaseActionMutation } from '../services/release';\n\nconst StyledMenuItem = styled(Menu.Item)<{ $variant?: 'neutral' | 'danger' }>`\n  &:hover {\n    background: ${({ theme, $variant = 'neutral' }) => theme.colors[`${$variant}100`]};\n\n    svg {\n      fill: ${({ theme, $variant = 'neutral' }) => theme.colors[`${$variant}600`]};\n    }\n\n    a {\n      color: ${({ theme }) => theme.colors.neutral800};\n    }\n  }\n\n  svg {\n    color: ${({ theme, $variant = 'neutral' }) => theme.colors[`${$variant}500`]};\n  }\n\n  span {\n    color: ${({ theme, $variant = 'neutral' }) => theme.colors[`${$variant}800`]};\n  }\n\n  span,\n  a {\n    width: 100%;\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * DeleteReleaseActionItemProps\n * -----------------------------------------------------------------------------------------------*/\ninterface DeleteReleaseActionItemProps {\n  releaseId: DeleteReleaseAction.Request['params']['releaseId'];\n  actionId: DeleteReleaseAction.Request['params']['actionId'];\n}\n\nconst DeleteReleaseActionItem = ({ releaseId, actionId }: DeleteReleaseActionItemProps) => {\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const { formatAPIError } = useAPIErrorHandler();\n  const [deleteReleaseAction] = useDeleteReleaseActionMutation();\n  const {\n    allowedActions: { canDeleteAction },\n  } = useRBAC(PERMISSIONS);\n\n  const handleDeleteAction = async () => {\n    const response = await deleteReleaseAction({\n      params: { releaseId, actionId },\n    });\n\n    if ('data' in response) {\n      // Handle success\n      toggleNotification({\n        type: 'success',\n        message: formatMessage({\n          id: 'content-releases.content-manager-edit-view.remove-from-release.notification.success',\n          defaultMessage: 'Entry removed from release',\n        }),\n      });\n\n      return;\n    }\n\n    if ('error' in response) {\n      if (isFetchError(response.error)) {\n        // Handle fetch error\n        toggleNotification({\n          type: 'danger',\n          message: formatAPIError(response.error),\n        });\n      } else {\n        // Handle generic error\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n        });\n      }\n    }\n  };\n\n  if (!canDeleteAction) {\n    return null;\n  }\n\n  return (\n    <StyledMenuItem $variant=\"danger\" onSelect={handleDeleteAction}>\n      <Flex gap={2}>\n        <Cross width=\"1.6rem\" height=\"1.6rem\" />\n        <Typography textColor=\"danger600\" variant=\"omega\">\n          {formatMessage({\n            id: 'content-releases.content-manager-edit-view.remove-from-release',\n            defaultMessage: 'Remove from release',\n          })}\n        </Typography>\n      </Flex>\n    </StyledMenuItem>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ReleaseActionEntryLinkItem\n * -----------------------------------------------------------------------------------------------*/\ninterface ReleaseActionEntryLinkItemProps {\n  contentTypeUid: ReleaseAction['contentType'];\n  documentId: ReleaseAction['entry']['documentId'];\n  locale: ReleaseAction['locale'];\n}\n\nconst ReleaseActionEntryLinkItem = ({\n  contentTypeUid,\n  documentId,\n  locale,\n}: ReleaseActionEntryLinkItemProps) => {\n  const { formatMessage } = useIntl();\n  const userPermissions = useAuth('ReleaseActionEntryLinkItem', (state) => state.permissions);\n\n  // Confirm user has permissions to access the entry for the given locale\n  const canUpdateEntryForLocale = React.useMemo(() => {\n    const updatePermissions = userPermissions.find(\n      (permission) =>\n        permission.subject === contentTypeUid &&\n        permission.action === 'plugin::content-manager.explorer.update'\n    );\n\n    if (!updatePermissions) {\n      return false;\n    }\n\n    return Boolean(!locale || updatePermissions.properties?.locales?.includes(locale));\n  }, [contentTypeUid, locale, userPermissions]);\n\n  const {\n    allowedActions: { canUpdate: canUpdateContentType },\n  } = useRBAC({\n    updateContentType: [\n      {\n        action: 'plugin::content-manager.explorer.update',\n        subject: contentTypeUid,\n      },\n    ],\n  });\n\n  if (!canUpdateContentType || !canUpdateEntryForLocale) {\n    return null;\n  }\n\n  return (\n    <StyledMenuItem\n      /* @ts-expect-error inference isn't working in DS */\n      tag={NavLink}\n      isLink\n      to={{\n        pathname: `/content-manager/collection-types/${contentTypeUid}/${documentId}`,\n        search: locale && `?plugins[i18n][locale]=${locale}`,\n      }}\n    >\n      <Flex gap={2}>\n        <Pencil width=\"1.6rem\" height=\"1.6rem\" />\n        <Typography variant=\"omega\">\n          {formatMessage({\n            id: 'content-releases.content-manager-edit-view.edit-entry',\n            defaultMessage: 'Edit entry',\n          })}\n        </Typography>\n      </Flex>\n    </StyledMenuItem>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * EditReleaseItem\n * -----------------------------------------------------------------------------------------------*/\ninterface EditReleaseItemProps {\n  releaseId: Release['id'];\n}\n\nconst EditReleaseItem = ({ releaseId }: EditReleaseItemProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    /* @ts-expect-error inference isn't working in DS */\n    <StyledMenuItem tag={NavLink} isLink to={`/plugins/content-releases/${releaseId}`}>\n      <Flex gap={2}>\n        <Pencil width=\"1.6rem\" height=\"1.6rem\" />\n        <Typography textColor=\"neutral800\" variant=\"omega\">\n          {formatMessage({\n            id: 'content-releases.content-manager-edit-view.edit-release',\n            defaultMessage: 'Edit release',\n          })}\n        </Typography>\n      </Flex>\n    </StyledMenuItem>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Root\n * -----------------------------------------------------------------------------------------------*/\n\ninterface RootProps {\n  children: React.ReactNode;\n  hasTriggerBorder?: boolean;\n}\n\nconst Root = ({ children }: RootProps) => {\n  const { formatMessage } = useIntl();\n\n  const { allowedActions } = useRBAC(PERMISSIONS);\n\n  return (\n    // A user can access the dropdown if they have permissions to delete a release-action OR update a release\n    allowedActions.canDeleteAction || allowedActions.canUpdate ? (\n      <Menu.Root>\n        <StyledMoreButton variant=\"tertiary\" endIcon={null} paddingLeft=\"7px\" paddingRight=\"7px\">\n          <AccessibleIcon\n            label={formatMessage({\n              id: 'content-releases.content-manager-edit-view.release-action-menu',\n              defaultMessage: 'Release action options',\n            })}\n          >\n            <More />\n          </AccessibleIcon>\n        </StyledMoreButton>\n        <Menu.Content top={1} popoverPlacement=\"bottom-end\">\n          {children}\n        </Menu.Content>\n      </Menu.Root>\n    ) : null\n  );\n};\n\nconst StyledMoreButton = styled(Menu.Trigger)`\n  & > span {\n    display: flex;\n  }\n`;\n\nexport const ReleaseActionMenu = {\n  Root,\n  EditReleaseItem,\n  DeleteReleaseActionItem,\n  ReleaseActionEntryLinkItem,\n};\n", "import { useRBAC, useQueryParams } from '@strapi/admin/strapi-admin';\nimport { unstable_useDocumentLayout as useDocumentLayout } from '@strapi/content-manager/strapi-admin';\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { PERMISSIONS } from '../constants';\nimport { useGetReleasesForEntryQuery } from '../services/release';\nimport { getTimezoneOffset } from '../utils/time';\n\nimport { ReleaseActionMenu } from './ReleaseActionMenu';\n\nimport type { PanelComponent, PanelComponentProps } from '@strapi/content-manager/strapi-admin';\n\nconst Panel: PanelComponent = ({\n  model,\n  document,\n  documentId,\n  collectionType,\n}: PanelComponentProps) => {\n  const [{ query }] = useQueryParams<{ plugins: { i18n: { locale: string } } }>();\n  const locale = query.plugins?.i18n?.locale;\n\n  const {\n    edit: { options },\n  } = useDocumentLayout(model);\n  const { formatMessage, formatDate, formatTime } = useIntl();\n\n  const { allowedActions } = useRBAC(PERMISSIONS);\n  const { canRead, canDeleteAction } = allowedActions;\n\n  const response = useGetReleasesForEntryQuery(\n    {\n      contentType: model,\n      entryDocumentId: documentId,\n      locale,\n      hasEntryAttached: true,\n    },\n    {\n      skip: !document,\n    }\n  );\n  const releases = response.data?.data;\n\n  const getReleaseColorVariant = (\n    actionType: 'publish' | 'unpublish',\n    shade: '100' | '200' | '600'\n  ) => {\n    if (actionType === 'unpublish') {\n      return `secondary${shade}`;\n    }\n\n    return `success${shade}`;\n  };\n\n  // Project is not EE or contentType does not have draftAndPublish enabled\n  if (!window.strapi.isEE || !options?.draftAndPublish || !canRead) {\n    return null;\n  }\n\n  if (collectionType === 'collection-types' && (!documentId || documentId === 'create')) {\n    return null;\n  }\n\n  if (!releases || releases.length === 0) {\n    return null;\n  }\n\n  return {\n    title: formatMessage({\n      id: 'content-releases.plugin.name',\n      defaultMessage: 'Releases',\n    }),\n    content: (\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={3} width=\"100%\">\n        {releases?.map((release) => (\n          <Flex\n            key={release.id}\n            direction=\"column\"\n            alignItems=\"start\"\n            borderWidth=\"1px\"\n            borderStyle=\"solid\"\n            borderColor={getReleaseColorVariant(release.actions[0].type, '200')}\n            overflow=\"hidden\"\n            hasRadius\n          >\n            <Box\n              paddingTop={3}\n              paddingBottom={3}\n              paddingLeft={4}\n              paddingRight={4}\n              background={getReleaseColorVariant(release.actions[0].type, '100')}\n              width=\"100%\"\n            >\n              <Typography\n                fontSize={1}\n                variant=\"pi\"\n                textColor={getReleaseColorVariant(release.actions[0].type, '600')}\n              >\n                {formatMessage(\n                  {\n                    id: 'content-releases.content-manager-edit-view.list-releases.title',\n                    defaultMessage:\n                      '{isPublish, select, true {Will be published in} other {Will be unpublished in}}',\n                  },\n                  { isPublish: release.actions[0].type === 'publish' }\n                )}\n              </Typography>\n            </Box>\n            <Flex padding={4} direction=\"column\" gap={2} width=\"100%\" alignItems=\"flex-start\">\n              <Typography fontSize={2} fontWeight=\"bold\" variant=\"omega\" textColor=\"neutral700\">\n                {release.name}\n              </Typography>\n              {release.scheduledAt && release.timezone && (\n                <Typography variant=\"pi\" textColor=\"neutral600\">\n                  {formatMessage(\n                    {\n                      id: 'content-releases.content-manager-edit-view.scheduled.date',\n                      defaultMessage: '{date} at {time} ({offset})',\n                    },\n                    {\n                      date: formatDate(new Date(release.scheduledAt), {\n                        day: '2-digit',\n                        month: '2-digit',\n                        year: 'numeric',\n                        timeZone: release.timezone,\n                      }),\n                      time: formatTime(new Date(release.scheduledAt), {\n                        hourCycle: 'h23',\n                        timeZone: release.timezone,\n                      }),\n                      offset: getTimezoneOffset(release.timezone, new Date(release.scheduledAt)),\n                    }\n                  )}\n                </Typography>\n              )}\n              {canDeleteAction ? (\n                <ReleaseActionMenu.Root hasTriggerBorder>\n                  <ReleaseActionMenu.EditReleaseItem releaseId={release.id} />\n                  <ReleaseActionMenu.DeleteReleaseActionItem\n                    releaseId={release.id}\n                    actionId={release.actions[0].id}\n                  />\n                </ReleaseActionMenu.Root>\n              ) : null}\n            </Flex>\n          </Flex>\n        ))}\n      </Flex>\n    ),\n  };\n};\n\nexport { Panel };\n", "export const pluginId = 'content-releases';\n", "type TradOptions = Record<string, string>;\n\nconst prefixPluginTranslations = (trad: TradOptions, pluginId: string): TradOptions => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n    return acc;\n  }, {} as TradOptions);\n};\n\nexport { prefixPluginTranslations };\n", "import { PaperPlane } from '@strapi/icons';\n\nimport { ReleaseAction } from './components/ReleaseAction';\nimport { ReleaseActionModalForm } from './components/ReleaseActionModal';\nimport { addColumnToTableHook } from './components/ReleaseListCell';\nimport { Panel as ReleasesPanel } from './components/ReleasesPanel';\nimport { PERMISSIONS } from './constants';\nimport { pluginId } from './pluginId';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nimport type { StrapiApp } from '@strapi/admin/strapi-admin';\nimport type {\n  DocumentActionComponent,\n  BulkActionComponent,\n} from '@strapi/content-manager/strapi-admin';\nimport type { Plugin } from '@strapi/types';\n\n// eslint-disable-next-line import/no-default-export\nconst admin: Plugin.Config.AdminInput = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register(app: StrapiApp) {\n    /**\n     * Hook that adds the locale column in the Release Details table\n     * @constant\n     * @type {string}\n     */\n    app.createHook('ContentReleases/pages/ReleaseDetails/add-locale-in-releases');\n\n    if (window.strapi.features.isEnabled('cms-content-releases')) {\n      app.addMenuLink({\n        to: `plugins/${pluginId}`,\n        icon: PaperPlane,\n        intlLabel: {\n          id: `${pluginId}.plugin.name`,\n          defaultMessage: 'Releases',\n        },\n        Component: () => import('./pages/App').then((mod) => ({ default: mod.App })),\n        permissions: PERMISSIONS.main,\n        position: 2,\n      });\n\n      // Insert the releases container into the CM's sidebar on the Edit View\n      const contentManagerPluginApis = app.getPlugin('content-manager').apis;\n      if (\n        'addEditViewSidePanel' in contentManagerPluginApis &&\n        typeof contentManagerPluginApis.addEditViewSidePanel === 'function'\n      ) {\n        contentManagerPluginApis.addEditViewSidePanel([ReleasesPanel]);\n      }\n\n      // Insert the \"add to release\" action into the CM's Edit View\n      if (\n        'addDocumentAction' in contentManagerPluginApis &&\n        typeof contentManagerPluginApis.addDocumentAction === 'function'\n      ) {\n        contentManagerPluginApis.addDocumentAction((actions: DocumentActionComponent[]) => {\n          const indexOfDeleteAction = actions.findIndex((action) => action.type === 'unpublish');\n          actions.splice(indexOfDeleteAction, 0, ReleaseActionModalForm);\n          return actions;\n        });\n      }\n\n      app.addSettingsLink('global', {\n        id: pluginId,\n        to: 'releases',\n        intlLabel: {\n          id: `${pluginId}.plugin.name`,\n          defaultMessage: 'Releases',\n        },\n        permissions: [],\n        async Component() {\n          const { ProtectedReleasesSettingsPage } = await import('./pages/ReleasesSettingsPage');\n          return { default: ProtectedReleasesSettingsPage };\n        },\n      });\n\n      if (\n        'addBulkAction' in contentManagerPluginApis &&\n        typeof contentManagerPluginApis.addBulkAction === 'function'\n      ) {\n        contentManagerPluginApis.addBulkAction((actions: BulkActionComponent[]) => {\n          // We want to add this action to just before the delete action all the time\n          const deleteActionIndex = actions.findIndex((action) => action.type === 'delete');\n\n          actions.splice(deleteActionIndex, 0, ReleaseAction);\n          return actions;\n        });\n      }\n\n      // Hook that adds a column into the CM's LV table\n      app.registerHook('Admin/CM/pages/ListView/inject-column-in-table', addColumnToTableHook);\n    } else if (\n      !window.strapi.features.isEnabled('cms-content-releases') &&\n      window.strapi?.flags?.promoteEE\n    ) {\n      app.addSettingsLink('global', {\n        id: pluginId,\n        to: '/plugins/purchase-content-releases',\n        intlLabel: {\n          id: `${pluginId}.plugin.name`,\n          defaultMessage: 'Releases',\n        },\n        permissions: [],\n        async Component() {\n          const { PurchaseContentReleases } = await import('./pages/PurchaseContentReleases');\n          return { default: PurchaseContentReleases };\n        },\n        licenseOnly: true,\n      });\n    }\n  },\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, 'content-releases'),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default admin;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,iBAAiB,CAAC,OAAgC,YACtD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMA,oBAAa,yBAAW,cAAc;ACT5C,IAAM,kBAAkB,CAAC,OAAgC,YACvD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,oBAAa,yBAAW,eAAe;ACT7C,IAAM,gBAAgB,CAAC,OAAgC,YACrD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,MAAK,WAAU,GAAE,wEAAA,CAAwE;MAC/F;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,aAAa;ACX3C,IAAM,oBAAoB,CAAC,OAAgC,YACzD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,iBAAiB;ACT/C,IAAM,oBAAoB,CAAC,OAAgC,YACzD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,iBAAiB;ACT/C,IAAM,eAAe,CAAC,OAAgC,YACpD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,YAAY;ACT1C,IAAM,aAAa,CAAC,OAAgC,YAClD,wBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,cAAA;EAAC;EAAA;IACC,MAAK;IACL,GAAE;EAAA;AACJ,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,UAAU;ACRxC,IAAM,eAAe,CAAC,OAAgC,YACpD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACC,wBAAA,QAAA,EAAK,MAAK,WAAU,GAAE,0FAAA,CAA0F;MAChH,wBAAA,QAAA,EAAK,MAAK,WAAU,GAAE,0FAAA,CAA0F;AAAA,EACnH,CAAA;AAEF,IAAMC,mBAAa,yBAAW,YAAY;ACtB1C,IAAM,sBAAsB,CAAC,OAAgC,YAC3D,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,mBAAmB;ACTjD,IAAM,gBAAgB,CAAC,OAAgC,YACrD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,aAAa;ACT3C,IAAM,eAAe,CAAC,OAAgC,YACnD,yBAAA,OAAA,EAAI,OAAM,8BAA6B,OAAO,IAAI,QAAQ,IAAI,MAAK,QAAO,SAAQ,eAAc,KAAW,GAAG,OAC7G,UAAA;MAAC,yBAAA,KAAA,EAAE,UAAS,0BACV,UAAA;QAAA;MAAC;MAAA;QACC,QAAO;QACP,iBAAgB;QAChB,eAAc;QACd,aAAa;QACb,GAAE;MAAA;IACJ;QACA;MAAC;MAAA;QACC,MAAK;QACL,aAAa;QACb,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,OAAO;QACP,QAAQ;QACR,GAAG;QACH,GAAG;QACH,MAAK;QACL,QAAO;QACP,aAAa;QACb,IAAI;MAAA;IACN;QAAA,wBACC,QAAK,EAAA,OAAO,IAAI,QAAQ,OAAO,GAAG,QAAQ,GAAG,MAAM,MAAK,QAAO,QAAO,WAAU,aAAa,OAAO,IAAI,MAAA,CAAO;QAChH;MAAC;MAAA;QACC,OAAO;QACP,QAAQ;QACR,GAAG;QACH,GAAG;QACH,MAAK;QACL,QAAO;QACP,aAAa;QACb,IAAI;MAAA;IACN;QACA;MAAC;MAAA;QACC,OAAO;QACP,QAAQ;QACR,GAAG;QACH,GAAG;QACH,MAAK;QACL,QAAO;QACP,aAAa;QACb,IAAI;MAAA;IACN;QACC,wBAAA,QAAA,EAAK,OAAO,MAAM,QAAQ,QAAQ,GAAG,QAAQ,GAAG,QAAQ,MAAK,WAAU,IAAI,MAAA,CAAO;QAClF,wBAAA,QAAA,EAAK,OAAO,MAAM,QAAQ,QAAQ,GAAG,SAAS,GAAG,QAAQ,MAAK,WAAU,IAAI,MAAA,CAAO;EAAA,EAAA,CACtF;MACC,wBAAA,QAAA,EACC,cAAC,wBAAA,YAAA,EAAS,IAAG,oBACX,cAAC,wBAAA,QAAA,EAAK,MAAK,QAAO,GAAE,0BAA0B,CAAA,EAChD,CAAA,EAAA,CACF;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,YAAY;AC1D1C,IAAM,oBAAoB,CAAC,OAAgC,YACxD,yBAAA,OAAA,EAAI,OAAM,8BAA6B,OAAO,IAAI,QAAQ,IAAI,MAAK,QAAO,SAAQ,eAAc,KAAW,GAAG,OAC7G,UAAA;MAAA,yBAAC,KAAE,EAAA,UAAS,+BAA8B,SAAS,MACjD,UAAA;QAAA;MAAC;MAAA;QACC,MAAK;QACL,aAAa;QACb,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,QAAO;QACP,aAAa;QACb,GAAE;MAAA;IACJ;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,QAAO;QACP,aAAa;QACb,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,QAAO;QACP,eAAc;QACd,gBAAe;QACf,aAAa;QACb,GAAE;MAAA;IACJ;EAAA,EAAA,CACF;MACC,wBAAA,QAAA,EACC,cAAC,wBAAA,YAAA,EAAS,IAAG,yBACX,cAAC,wBAAA,QAAA,EAAK,MAAK,QAAO,GAAE,0BAA0B,CAAA,EAChD,CAAA,EAAA,CACF;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,iBAAiB;AAC/C,IAAA,eAAeA;ACnDf,IAAM,sBAAsB,CAAC,OAAgC,YAAA,wBAC1D,OAAI,EAAA,OAAM,8BAA6B,OAAO,IAAI,QAAQ,IAAI,MAAK,QAAO,SAAQ,eAAc,KAAW,GAAG,OAC7G,cAAA,yBAAC,KAAE,EAAA,SAAS,MACV,UAAA;MAAA;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;MACA;IAAC;IAAA;MACC,QAAO;MACP,eAAc;MACd,gBAAe;MACf,aAAa;MACb,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;MACA;IAAC;IAAA;MACC,QAAO;MACP,eAAc;MACd,gBAAe;MACf,aAAa;MACb,GAAE;IAAA;EACJ;MACA,wBAAC,WAAQ,EAAA,IAAI,OAAO,IAAI,QAAQ,MAAK,WAAU,IAAI,QAAQ,IAAI,OAAQ,CAAA;MACvE;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;MACA;IAAC;IAAA;MACC,MAAK;MACL,QAAO;MACP,aAAa;MACb,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,OAAO;MACP,QAAQ;MACR,MAAK;MACL,IAAI;MACJ,WAAU;IAAA;EACZ;AAAA,EACF,CAAA,EACF,CAAA;AAEF,IAAMA,mBAAa,yBAAW,mBAAmB;AC5DjD,IAAM,mBAAmB,CAAC,OAAgC,YACvD,yBAAA,OAAA,EAAI,OAAM,8BAA6B,OAAO,IAAI,QAAQ,IAAI,MAAK,QAAO,SAAQ,eAAc,KAAW,GAAG,OAC7G,UAAA;MAAC,wBAAA,KAAA,EAAE,UAAS,8BACV,cAAA,yBAAC,KAAA,EAAE,UAAS,8BAA6B,SAAS,MAChD,UAAA;QAAA;MAAC;MAAA;QACC,MAAK;QACL,aAAa;QACb,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,QAAO;QACP,eAAc;QACd,aAAa;QACb,GAAE;MAAA;IACJ;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,QAAO;QACP,aAAa;QACb,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,UAAS;QACT,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,QAAO;QACP,aAAa;QACb,GAAE;QACF,UAAS;MAAA;IACX;QACA;MAAC;MAAA;QACC,MAAK;QACL,QAAO;QACP,aAAa;QACb,GAAE;MAAA;IACJ;QACA;MAAC;MAAA;QACC,QAAO;QACP,eAAc;QACd,aAAa;QACb,GAAE;MAAA;IACJ;EAAA,EAAA,CACF,EACF,CAAA;MAAA,yBACC,QACC,EAAA,UAAA;QAAC,wBAAA,YAAA,EAAS,IAAG,wBACX,cAAA,wBAAC,QAAA,EAAK,MAAK,QAAO,GAAE,0BAAA,CAA0B,EAChD,CAAA;QACA,wBAAC,YAAS,EAAA,IAAG,wBACX,cAAA,wBAAC,QAAA,EAAK,MAAK,QAAO,GAAE,0BAAA,CAA0B,EAChD,CAAA;EAAA,EAAA,CACF;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,gBAAgB;AC/E9C,IAAM,sBAAsB,CAAC,OAAgC,YAC3D,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,mBAAmB;ACTjD,IAAM,cAAc,CAAC,OAAgC,YACnD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,WAAW;ACZzC,IAAM,mBAAmB,CAAC,OAAgC,YACxD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,MAAK,WAAU,GAAE,wEAAA,CAAwE;MAC/F;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,gBAAgB;ACT9C,IAAM,YAAY,CAAC,OAAgC,YACjD,wBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,cAAA;EAAC;EAAA;IACC,MAAK;IACL,UAAS;IACT,GAAE;IACF,UAAS;EAAA;AACX,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,SAAS;ACVvC,IAAM,mBAAmB,CAAC,OAAgC,YACxD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,MAAK,WAAU,GAAE,wEAAA,CAAwE;MAC/F;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,gBAAgB;ACX9C,IAAM,uBAAuB,CAAC,OAAgC,YAC5D,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,MAAK,WAAU,GAAE,wEAAA,CAAwE;MAC/F;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,oBAAoB;ACTlD,IAAM,eAAe,CAAC,OAAgC,YACpD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,YAAY;ACT1C,IAAM,mBAAmB,CAAC,OAAgC,YACxD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,gBAAgB;ACT9C,IAAM,gBAAgB,CAAC,OAAgC,YACrD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,aAAa;ACT3C,IAAM,YAAY,CAAC,OAAgC,YACjD,wBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,cAAA;EAAC;EAAA;IACC,MAAK;IACL,GAAE;EAAA;AACJ,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,SAAS;ACRvC,IAAM,iBAAiB,CAAC,OAAgC,YACtD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,cAAc;ACT5C,IAAM,mBAAmB,CAAC,OAAgC,YACxD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,gBAAgB;ACT9C,IAAM,gBAAgB,CAAC,OAAgC,YACrD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,MAAK,WAAU,GAAE,wEAAA,CAAwE;MAC/F;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,aAAa;ACX3C,IAAM,YAAY,CAAC,OAAgC,YACjD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,SAAS;ACZvC,IAAM,mBAAmB,CAAC,OAAgC,YACxD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,gBAAgB;ACT9C,IAAM,gBAAgB,CAAC,OAAgC,YACrD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,aAAa;ACT3C,IAAM,YAAY,CAAC,OAAgC,YACjD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,UAAS;MACT,GAAE;MACF,UAAS;IAAA;EACX;MACC,wBAAA,QAAA,EAAK,MAAK,QAAO,GAAE,8BAAA,CAA8B;MAClD;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,SAAS;ACnBvC,IAAM,eAAe,CAAC,OAAgC,YACpD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,YAAY;ACT1C,IAAM,cAAc,CAAC,OAAgC,YACnD,yBAAC,OAAA,EAAI,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,UAAA;MAAA,wBAAC,QAAK,EAAA,OAAO,IAAI,QAAQ,IAAI,GAAG,KAAK,GAAG,KAAK,MAAK,WAAU,QAAO,WAAU,IAAI,IAAA,CAAK;MACtF;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA;AAEF,IAAMC,mBAAa,yBAAW,WAAW;ACTzC,IAAM,OAAO,CAAC,OAAgC,YAAA,wBAC3C,OAAI,EAAA,OAAM,8BAA6B,SAAQ,aAAY,OAAO,IAAI,QAAQ,IAAI,KAAW,GAAG,OAC/F,cAAA,yBAAC,KAAE,EAAA,UAAS,WAAU,UAAS,WAC7B,UAAA;MAAA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;MACA;IAAC;IAAA;MACC,MAAK;MACL,GAAE;IAAA;EACJ;AAAA,EACF,CAAA,EACF,CAAA;AAEF,IAAM,iBAAa,yBAAW,IAAI;;;;;ICdrBC,cAAc;EACzBC,MAAM;IACJ;MACEC,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;EACDC,QAAQ;IACN;MACEN,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;EACDE,QAAQ;IACN;MACEP,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;EACDG,QAAQ;IACN;MACER,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;EACDI,cAAc;IACZ;MACET,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;EACDK,cAAc;IACZ;MACEV,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;EACDM,SAAS;IACP;MACEX,QAAQ;MACRC,SAAS;MACTC,IAAI;MACJC,kBAAkB,CAAA;MAClBC,YAAY,CAAA;MACZC,YAAY,CAAA;IACd;EACD;AACH;ACrBA,IAAMO,wBAAwB,CAC5BC,UACAC,cAAAA;AAEA,MAAI,CAACD,UAAU;AACb;EACF;AAEA,QAAME,0BAA0BF,SAASG;AAEzC,QAAMC,qBAA+D,CACnEC,QACAC,KACAC,MACAC,SAAAA;AAEA,UAAMC,eACJ,OAAOP,4BAA4B,aAC/BA,wBAAwBG,QAAQC,KAAKC,MAAMC,IAC3CN,IAAAA;AAEN,WAAO;MAAKO,GAAAA,gBAAgB,CAAA;MAAQR,GAAAA;IAAU;EAChD;AAEAS,SAAOC,OAAOX,UAAU;IAAEG,iBAAiBC;EAAmB,CAAA;AAChE;AAEMQ,IAAAA,aAAaC,SAChBC,iBAAiB;EAChBC,aAAa;IAAC;IAAW;IAAiB;IAAoB;IAAmB;EAAW;EAC5FC,WAAW;IACTC,eAAejB,UAA+B;AAC5CD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;IACA8B,eAAenB,UAA+B;AAC5CD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;IACA+B,oBAAoBpB,UAA+B;AACjDD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;IACAgC,gBAAgBrB,UAA+B;AAC7CD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;IACAiC,eAAetB,UAA+B;AAC5CD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;IACAkC,eAAevB,UAA+B;AAC5CD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;IACAmC,eAAexB,UAA+B;AAC5CD,4BAAsBC,UAAU;QAC9B;UAAEkB,MAAM;UAAW7B,IAAI;QAAO;QAC9B;UAAE6B,MAAM;UAAiB7B,IAAI;QAAO;MACrC,CAAA;IACH;EACF;AACF,CAAA,EACCoC,gBAAgB;EACfT,WAAW,CAACU,UAAAA;AACV,WAAO;MACLC,qBAAqBD,MAAME,MAGzB;QACAA,MAAMC,QAAM;AACV,iBAAO;YACLC,KAAK;YACLC,QAAQ;YACRC,QAAQ;cACNH;YACF;UACF;QACF;QACAI,cAAc,CAAC5B,WACbA,SACI;aACKA,OAAO6B,KAAKC,IAAI,CAAC,EAAE9C,GAAE,OAAQ;YAAE6B,MAAM;YAAoB7B;YAAG;UAC/D;YAAE6B,MAAM;YAAW7B,IAAI;UAAO;QAC/B,IACD,CAAA;MACR,CAAA;MACA+C,aAAaV,MAAME,MAA6D;QAC9EA,MACE,EAAES,MAAMC,UAAUC,QAAO,IAAK;UAC5BF,MAAM;UACNC,UAAU;UACVC,SAAS;YACPC,YAAY;cACVC,UAAU;YACZ;UACF;WACD;AAED,iBAAO;YACLX,KAAK;YACLC,QAAQ;YACRC,QAAQ;cACNH,QAAQ;gBACNQ,MAAMA,QAAQ;gBACdC,UAAUA,YAAY;gBACtBC,SAASA,WAAW;kBAClBC,YAAY;oBACVC,UAAU;kBACZ;gBACF;cACF;YACF;UACF;QACF;QACAC,kBAAkBC,UAAkCnC,MAAMoC,KAAG;;AAC3D,gBAAMC,mBAAkBD,sCAAKL,YAALK,mBAAcJ,eAAdI,mBAA0BH;AAClD,gBAAMK,kBAAkBD,oBAAoB;AAC5C,gBAAME,cAAsC;YAC1C,GAAGJ;YACHnC,MAAM;cACJ,GAAGmC,SAASnC;cACZwC,WAAWF,kBAAkB,SAAS;YACxC;UACF;AAEA,iBAAOC;QACT;QACAd,cAAc,CAAC5B,WACbA,SACI;aACKA,OAAO6B,KAAKC,IAAI,CAAC,EAAE9C,GAAE,OAAQ;YAAE6B,MAAM;YAAoB7B;YAAG;UAC/D;YAAE6B,MAAM;YAAW7B,IAAI;UAAO;YAEhC;UAAC;YAAE6B,MAAM;YAAW7B,IAAI;UAAO;QAAE;MACzC,CAAA;MACA4D,YAAYvB,MAAME,MAAyD;QACzEA,MAAM,EAAEvC,GAAE,GAAE;AACV,iBAAO;YACLyC,KAAK,qBAAqBzC,EAAAA;YAC1B0C,QAAQ;UACV;QACF;QACAE,cAAc,CAAC5B,QAAQ6C,OAAON,QAAQ;UACpC;YAAE1B,MAAM;YAAW7B,IAAI;UAAO;UAC9B;YAAE6B,MAAM;YAAoB7B,IAAIuD,IAAIvD;UAAG;QACxC;MACH,CAAA;MACA8D,mBAAmBzB,MAAME,MAGvB;QACAA,MAAM,EAAEwB,WAAW,GAAGvB,OAAQ,GAAA;AAC5B,iBAAO;YACLC,KAAK,qBAAqBsB,SAAAA;YAC1BrB,QAAQ;YACRC,QAAQ;cACNH;YACF;UACF;QACF;QACAI,cAAc;UAAC;YAAEf,MAAM;YAAiB7B,IAAI;UAAO;QAAE;MACvD,CAAA;MACAgE,eAAe3B,MAAM4B,SAAgE;QACnF1B,MAAMM,MAAI;AACR,iBAAO;YACLJ,KAAK;YACLC,QAAQ;YACRG;UACF;QACF;QACA/B,iBAAiB;UAAC;YAAEe,MAAM;YAAW7B,IAAI;UAAO;QAAE;MACpD,CAAA;MACAkE,eAAe7B,MAAM4B,SAGnB;QACA1B,MAAM,EAAEvC,IAAI,GAAG6C,KAAM,GAAA;AACnB,iBAAO;YACLJ,KAAK,qBAAqBzC,EAAAA;YAC1B0C,QAAQ;YACRG;UACF;QACF;QACA/B,iBAAiB,CAACE,QAAQ6C,OAAON,QAAQ;UAAC;YAAE1B,MAAM;YAAW7B,IAAIuD,IAAIvD;UAAG;QAAE;MAC5E,CAAA;MACAmE,qBAAqB9B,MAAM4B,SAGzB;QACA1B,MAAM,EAAE6B,MAAM5B,OAAM,GAAE;AACpB,iBAAO;YACLC,KAAK,qBAAqBD,OAAOuB,SAAS;YAC1CrB,QAAQ;YACRG,MAAMuB;UACR;QACF;QACAtD,iBAAiB;UACf;YAAEe,MAAM;YAAW7B,IAAI;UAAO;UAC9B;YAAE6B,MAAM;YAAiB7B,IAAI;UAAO;QACrC;MACH,CAAA;MACAqE,0BAA0BhC,MAAM4B,SAG9B;QACA1B,MAAM,EAAE6B,MAAM5B,OAAM,GAAE;AACpB,iBAAO;YACLC,KAAK,qBAAqBD,OAAOuB,SAAS;YAC1CrB,QAAQ;YACRG,MAAMuB;UACR;QACF;QACAtD,iBAAiB;UACf;YAAEe,MAAM;YAAW7B,IAAI;UAAO;UAC9B;YAAE6B,MAAM;YAAiB7B,IAAI;UAAO;UACpC;YAAE6B,MAAM;UAAmB;QAC5B;MACH,CAAA;MACAyC,qBAAqBjC,MAAM4B,SAKzB;QACA1B,MAAM,EAAE6B,MAAM5B,OAAM,GAAE;AACpB,iBAAO;YACLC,KAAK,qBAAqBD,OAAOuB,SAAS,YAAYvB,OAAO+B,QAAQ;YACrE7B,QAAQ;YACRG,MAAMuB;UACR;QACF;QACAtD,iBAAiB,CAAC0D,KAAKX,OAAON,QAAQ;UACpC;YAAE1B,MAAM;YAAiB7B,IAAI;UAAO;UACpC;YAAE6B,MAAM;YAAW7B,IAAI;UAAO;UAC9B;YAAE6B,MAAM;YAAW7B,IAAIuD,IAAIf,OAAOuB;UAAU;QAC7C;QACD,MAAMU,eAAe,EAAEL,MAAM5B,QAAQD,OAAOmC,WAAU,GAAI,EAAEC,UAAUC,eAAc,GAAE;AAEpF,gBAAMC,wBAAwB;YAC5Bd,WAAWvB,OAAOuB;YAClB,GAAGxB;UACL;AAEA,gBAAMuC,cAAcH,SAClBpD,WAAWwD,KAAKC,gBACd,qBACAH,uBACA,CAACI,UAAAA;AACC,kBAAM,CAACC,KAAKC,KAAAA,IAAST;AACrB,kBAAM5E,SAASmF,MAAMpC,KAAKqC,GAAAA,EAAKC,KAAM;AAErC,gBAAIrF,QAAQ;AACVA,qBAAO+B,OAAOuC,KAAKvC;YACrB;UACF,CAAA,CAAA;AAIJ,cAAI;AACF,kBAAM+C;UACR,QAAQ;AACNE,wBAAYM,KAAI;UAClB;QACF;MACF,CAAA;MACAC,qBAAqBhD,MAAM4B,SAGzB;QACA1B,MAAM,EAAEC,OAAM,GAAE;AACd,iBAAO;YACLC,KAAK,qBAAqBD,OAAOuB,SAAS,YAAYvB,OAAO+B,QAAQ;YACrE7B,QAAQ;UACV;QACF;QACA5B,iBAAiB,CAACE,QAAQ6C,OAAON,QAAQ;UACvC;YAAE1B,MAAM;YAAW7B,IAAI;UAAO;UAC9B;YAAE6B,MAAM;YAAW7B,IAAIuD,IAAIf,OAAOuB;UAAU;UAC5C;YAAElC,MAAM;YAAiB7B,IAAI;UAAO;UACpC;YAAE6B,MAAM;UAAmB;QAC5B;MACH,CAAA;MACAyD,gBAAgBjD,MAAM4B,SAAoE;QACxF1B,MAAM,EAAEvC,GAAE,GAAE;AACV,iBAAO;YACLyC,KAAK,qBAAqBzC,EAAAA;YAC1B0C,QAAQ;UACV;QACF;QACA5B,iBAAiB,CAACE,QAAQ6C,OAAON,QAAQ;UACvC;YAAE1B,MAAM;YAAW7B,IAAIuD,IAAIvD;UAAG;UAC9B;YAAE6B,MAAM;YAAY7B,IAAI;UAAW;QACpC;MACH,CAAA;MACAuF,eAAelD,MAAM4B,SAAkE;QACrF1B,MAAM,EAAEvC,GAAE,GAAE;AACV,iBAAO;YACLyC,KAAK,qBAAqBzC,EAAAA;YAC1B0C,QAAQ;UACV;QACF;QACA5B,iBAAiB,MAAM;UAAC;YAAEe,MAAM;YAAW7B,IAAI;UAAO;UAAG;YAAE6B,MAAM;UAAmB;QAAE;MACxF,CAAA;MACA2D,4BAA4BnD,MAAME,MAGhC;QACAA,MAAMC,QAAM;AACV,iBAAO;YACLC,KAAK;YACLC,QAAQ;YACRC,QAAQ;cACNH;YACF;UACF;QACF;QACAa,kBAAkBC,UAAuC;AACvD,iBAAOA,SAAST;QAClB;QACAD,cAAc;UAAC;YAAEf,MAAM;UAAmB;QAAE;MAC9C,CAAA;MACA4D,oBAAoBpD,MAAME,MAAwD;QAChFA,OAAO,MAAM;QACbK,cAAc;UAAC;YAAEf,MAAM;UAAkB;QAAE;MAC7C,CAAA;MACA6D,uBAAuBrD,MAAM4B,SAA+C;QAC1E1B,MAAMM,MAAI;AACR,iBAAO;YACLJ,KAAK;YACLC,QAAQ;YACRG;UACF;QACF;QACA/B,iBAAiB;UAAC;YAAEe,MAAM;UAAkB;QAAE;MAChD,CAAA;IACF;EACF;AACF,CAAA;AAEF,IAAM,EACJ8D,qBACAC,6BACAC,oBACAC,2BACAC,0BACAC,gCACAC,qCACAC,0BACAC,gCACAC,2BACAC,gCACAC,0BACAC,oCACAC,4BACAC,iCAAgC,IAC9BlF;AC3ZJ,IAAMmF,2BAA2B,CAACC,eAAAA;AAChC,SAAOA,eAAe,YAAY,IAAI;AACxC;AAEA,IAAMC,4BAA4B,CAACD,eAAAA;AACjC,SAAOA,eAAe,YAAY,IAAI;AACxC;AAEA,IAAME,eAAeC,GAAOC,MAAMC,IAAI;4BAGV,CAAC,EAAEC,aAAaC,MAAK,MAC7CA,MAAMC,OAAOT,yBAAyBO,WAAAA,CAAAA,CAAa;+BACxB,CAAC,EAAEA,aAAaC,MAAK,MAChDA,MAAMC,OAAOT,yBAAyBO,WAAAA,CAAAA,CAAa;6BAC1B,CAAC,EAAEA,aAAaC,MAAK,MAC9CA,MAAMC,OAAOP,0BAA0BK,WAAAA,CAAAA,CAAa;gCACxB,CAAC,EAAEA,aAAaC,MAAK,MACjDA,MAAMC,OAAOP,0BAA0BK,WAAAA,CAAAA,CAAa;;;;eAIzC,CAAC,EAAEC,MAAK,MAAO,GAAGA,MAAMC,OAAO,CAAA,CAAE,IAAID,MAAMC,OAAO,CAAE,CAAA,EAAE;;;;;;;aAOxD,CAAC,EAAED,OAAOD,YAAW,MAC5BA,gBAAgB,YAAYC,MAAME,OAAOC,aAAaH,MAAME,OAAOE,SAAS;wBAC1D,CAAC,EAAEJ,OAAOD,YAAW,MACvCA,gBAAgB,YAAYC,MAAME,OAAOG,aAAaL,MAAME,OAAOI,SAAS;oBAC9D,CAAC,EAAEN,OAAOD,YAAW,MACnCA,gBAAgB,YAAYC,MAAME,OAAOC,aAAaH,MAAME,OAAOE,SAAS;;;;mBAI/D,CAAC,EAAEL,YAAW,MAAOA,gBAAgB,eAAe,MAAO;oBAC1D,CAAC,EAAEA,YAAW,MAAOA,gBAAgB,aAAa,MAAO;;;;aAIhE,CAAC,EAAEC,MAAK,MAAOA,MAAME,OAAOK,UAAU;wBAC3B,CAAC,EAAEP,MAAK,MAAOA,MAAME,OAAOM,UAAU;oBAC1C,CAAC,EAAER,MAAK,MAAOA,MAAME,OAAOO,UAAU;;;;;;;;aAQ7C,CAAC,EAAET,MAAK,MAAOA,MAAME,OAAOQ,UAAU;wBAC3B,CAAC,EAAEV,MAAK,MAAOA,MAAME,OAAOS,UAAU;oBAC1C,CAAC,EAAEX,MAAK,MAAOA,MAAME,OAAOU,UAAU;;;AAe1D,IAAMC,eAAe,CAAC,EACpBC,UACArB,YACAsB,cACAC,MACAC,WAAW,MAAK,MACJ;AACZ,aACEC,yBAACvB,cAAAA;IACCI,aAAaN;IACb0B,YAAW;IACXC,aAAY;IACZC,OAAOP,aAAarB,aAAa,eAAe;IAChD6B,UAAS;IACTC,QAAO;IACPC,gBAAcV,aAAarB;IAC3BgC,iBAAeR,YAAYH,aAAarB;kBAExCiC,0BAAC7B,MAAM8B,OAAK;;YACVT,yBAACU,gBAAAA;wBACCV,yBAACrB,MAAMgC,OAAK;YACVlH,MAAK;YACLqG;YACAc,SAAShB,aAAarB;YACtBsC,UAAUhB;YACViB,OAAOvC;YACPwB;;;QAGHxB;;;;AAIT;AAEawC,IAAAA,uBAAuB,CAAC,EACnCnB,UACAC,cACAC,MACAC,WAAW,MAAK,MACE;AAClB,aACES,0BAACQ,MAAAA;;UACChB,yBAACL,cAAAA;QACCpB,YAAW;QACXqB;QACAC;QACAC;QACAC;;UAEFC,yBAACL,cAAAA;QACCpB,YAAW;QACXqB;QACAC;QACAC;QACAC;;;;AAIR;AC/FO,IAAMkB,6BAAiCC,QAAM,EAAGC,MAAM;EAC3D1H,MAAU2H,OAAM,EAAGC,MAAM;IAAC;IAAW;EAAY,CAAA,EAAEC,SAAQ;EAC3D3F,WAAeyF,OAAM,EAAGE,SAAQ;AAClC,CAAG;AAOI,IAAMC,iBAAiB;EAC5B9H,MAAM;EACNkC,WAAW;AACb;AASO,IAAM6F,aAAa,MAAA;AACxB,QAAM,EAAEC,cAAa,IAAKC,QAAAA;AAC1B,aACE1B,yBAAC2B,kBAAAA;IACCC,UAAM5B,yBAAC6B,cAAAA;MAAeC,OAAM;;IAC5BC,SAASN,cAAc;MACrB7J,IAAI;MACJoK,gBACE;IACJ,CAAA;IACAtK,YACEsI,yBAACiC,YAAAA;MACCC,IAAI;QACFC,UAAU;MACZ;MACAC,KAAKC;MACLC,SAAQ;gBAEPb,cAAc;QACb7J,IAAI;QACJoK,gBAAgB;MAClB,CAAA;;IAGJO,QAAO;;AAGb;AAEA,IAAMC,0BAA0B,CAAC,EAC/BC,aACAC,YACAC,eACAC,OAAM,MACuB;;AAC7B,QAAM,EAAEnB,cAAa,IAAKC,QAAAA;AAC1B,QAAM,CAAC,EAAEvH,MAAK,CAAE,IAAI0I,eAAAA;AACpB,QAAMC,UAAS3I,iBAAM4I,YAAN5I,mBAAe6I,SAAf7I,mBAAqB2I;AAGpC,QAAM5H,WAAWsC,4BAA4B;IAC3CiF;IACAQ,iBAAiBP;IACjBQ,kBAAkB;IAClBJ;EACF,CAAA;AAEA,QAAMK,YAAWjI,cAAST,SAATS,mBAAeT;AAEhC,OAAI0I,qCAAUC,YAAW,GAAG;AAC1B,eAAOpD,yBAACwB,YAAAA,CAAAA,CAAAA;EACV;AAEA,aACEhB,0BAACQ,MAAAA;IAAKqC,WAAU;IAASC,YAAW;IAAUC,KAAK;;UACjDvD,yBAACwD,KAAAA;QAAIC,eAAe;sBAClBjD,0BAAC7B,MAAMC,MAAI;UAAC0C,UAAQ;;gBAClBtB,yBAACrB,MAAM8B,OAAK;wBACTgB,cAAc;gBACb7J,IAAI;gBACJoK,gBAAgB;cAClB,CAAA;;gBAEFhC,yBAAC0D,cAAAA;cACCpC,UAAQ;cACRqC,aAAalC,cAAc;gBACzB7J,IAAI;gBACJoK,gBAAgB;cAClB,CAAA;cACAlC,MAAK;cACLe,UAAU,CAACC,UAAU6B,cAAc,aAAa7B,KAAAA;cAChDA,OAAO8B,OAAOjH;wBAEbwH,qCAAUzI,IAAI,CAACkJ,gBACd5D,yBAAC6D,oBAAAA;gBAAoC/C,OAAO8C,QAAQhM;gBACjDgM,UAAAA,QAAQ9D;cADc8D,GAAAA,QAAQhM,EAAE;;;;;UAO3CoI,yBAACrB,MAAM8B,OAAK;kBACTgB,cAAc;UACb7J,IAAI;UACJoK,gBAAgB;QAClB,CAAA;;UAEFhC,yBAACe,sBAAAA;QACCnB,UAAUgD,OAAOnJ;QACjBoG,cAAc,CAACiE,MAAMnB,cAAc,QAAQmB,EAAEC,OAAOjD,KAAK;QACzDhB,MAAK;;;;AAIb;AAMA,IAAMkE,yBAAkD,CAAC,EACvDtB,YACAuB,UACAC,OACAC,eAAc,MACM;;AACpB,QAAM,EAAE1C,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EAAE0C,eAAc,IAAKC,QAAQ7M,WAAAA;AACnC,QAAM,EAAE8M,gBAAe,IAAKF;AAC5B,QAAM,CAACrI,qBAAqB,EAAEwI,UAAS,CAAE,IAAI3G,+BAAAA;AAC7C,QAAM,EAAE4G,mBAAkB,IAAKC,gBAAAA;AAC/B,QAAM,EAAEC,eAAc,IAAKC,mBAAAA;AAC3B,QAAM,CAAC,EAAExK,MAAK,CAAE,IAAI0I,eAAAA;AACpB,QAAMC,UAAS3I,iBAAM4I,YAAN5I,mBAAe6I,SAAf7I,mBAAqB2I;AAEpC,QAAM8B,eAAe,OAAOd,GAAqCe,YAAAA;AAC/D,QAAI;AACF,YAAMC,OAAOF,aAAad,CAAAA;AAC1Be,cAAAA;IACF,SAASpJ,OAAO;AACd,UAAIsJ,aAAatJ,KAAQ,GAAA;AAEvB+I,2BAAmB;UACjB/K,MAAM;UACNuL,SAASN,eAAejJ,KAAAA;QAC1B,CAAA;aACK;AAEL+I,2BAAmB;UACjB/K,MAAM;UACNuL,SAASvD,cAAc;YACrB7J,IAAI;YACJoK,gBAAgB;UAClB,CAAA;QACF,CAAA;MACF;IACF;EACF;AAEA,QAAM8C,SAASG,UAAU;IACvBC,eAAe3D;IACf4D,kBAAkBlE;IAClBmE,UAAU,OAAOxC,WAAAA;AACf,UAAIuB,mBAAmB,sBAAsB,CAACzB,YAAY;AACxD,cAAM,IAAI2C,MAAM,yBAAA;MAClB;AAEA,YAAMnK,WAAW,MAAMa,oBAAoB;QACzCC,MAAM;UACJvC,MAAMmJ,OAAOnJ;UACbgJ,aAAayB;UACbjB,iBAAiBP;UACjBI;QACF;QACA1I,QAAQ;UAAEuB,WAAWiH,OAAOjH;QAAU;MACxC,CAAA;AAEA,UAAI,UAAUT,UAAU;AAEtBsJ,2BAAmB;UACjB/K,MAAM;UACNuL,SAASvD,cAAc;YACrB7J,IAAI;YACJoK,gBAAgB;UAClB,CAAA;QACF,CAAA;AAEA;MACF;AAEA,UAAI,WAAW9G,UAAU;AACvB,cAAMA,SAASO;MACjB;IACF;EACF,CAAA;AAEA,QAAM,EACJ6J,MAAM,EAAEC,QAAO,EAAE,IACfC,kBAAkBtB,KAAAA;AAGtB,MAAI,CAACuB,OAAOC,OAAOC,QAAQ,EAACJ,mCAASK,oBAAmB,CAACtB,iBAAiB;AACxE,WAAO;EACT;AAEA,MAAIH,mBAAmB,uBAAuB,CAACzB,cAAcA,eAAe,WAAW;AACrF,WAAO;EACT;AAEA,SAAO;IACLmD,OAAOpE,cAAc;MACnB7J,IAAI;MACJoK,gBAAgB;IAClB,CAAA;IACAJ,UAAM5B,yBAAC8F,eAAAA,CAAAA,CAAAA;;IAEP/F,UAAU,CAACkE;IACX7D,UAAU;MAAC;MAAS;IAAY;IAChC2F,QAAQ;MACNtM,MAAM;MACNuM,OAAOvE,cAAc;QACnB7J,IAAI;QACJoK,gBAAgB;MAClB,CAAA;MACAD,aACE/B,yBAACwC,yBAAAA;QACCC,aAAayB;QACbxB;QACAC,eAAemC,OAAOmB;QACtBrD,QAAQkC,OAAOlC;;MAGnBsD,QAAQ,CAAC,EAAErB,QAAO,UAChBrE,0BAAC2F,MAAMC,QAAM;;cACXpG,yBAACqG,QAAAA;YAAOC,SAASzB;YAASvC,SAAQ;YAAWxC,MAAK;sBAC/C2B,cAAc;cACb7J,IAAI;cACJoK,gBAAgB;YAClB,CAAA;;cAEFhC,yBAACqG,QAAAA;YACC5M,MAAK;;YAEL6M,SAAS,CAACxC,MAAMc,aAAad,GAAGe,OAAAA;YAChC9E,UAAU,CAAC+E,OAAOlC,OAAOjH;YACzB4K,SAAShC;sBAER9C,cAAc;cACb7J,IAAI;cACJoK,gBAAgB;YAClB,CAAA;;;;IAIR;EACF;AACF;ACzQA,IAAMwE,wBAAwB,CAAC7O,YAAAA;AAC7B,QAAM8O,cAAc;IAClBpO,SAAS;MACP;QACEX,QAAQ;QACRC;QACAC,IAAI;QACJC,kBAAkB,CAAA;QAClBC,YAAY,CAAA;QACZC,YAAY,CAAA;MACd;IACD;EACH;AAEA,SAAO0O;AACT;AAEA,IAAMC,gBAAqC,CAAC,EAAEC,WAAWzC,MAAK,MAAE;;AAC9D,QAAM,EAAEzC,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EAAE8C,mBAAkB,IAAKC,gBAAAA;AAC/B,QAAM,EAAEC,eAAc,IAAKC,mBAAAA;AAC3B,QAAM,CAAC,EAAExK,MAAK,CAAE,IAAI0I,eAAAA;AACpB,QAAM+D,qBAAqBJ,sBAAsBtC,KAAAA;AACjD,QAAM,EACJE,gBAAgB,EAAEyC,WAAU,EAAE,IAC5BxC,QAAQuC,kBAAAA;AACZ,QAAM,EACJxC,gBAAgB,EAAE0C,UAAS,EAAE,IAC3BzC,QAAQ0C,WAAAA;AAGZ,QAAM7L,WAAWqC,oBAAAA;AACjB,QAAM4F,YAAWjI,cAAST,SAATS,mBAAeT;AAChC,QAAM,CAACwB,0BAA0B,EAAEsI,UAAS,CAAE,IAAI1G,oCAAAA;AAClD,QAAMmJ,cAAcL,UAAUjM,IAAI,CAACuM,QAAQA,IAAIvE,UAAU;AAEzD,QAAMkC,eAAe,OAAOhC,WAAAA;;AAC1B,UAAME,UAAS3I,MAAAA,MAAAA,MAAM4I,YAAN5I,gBAAAA,IAAe6I,SAAf7I,mBAAqB2I;AAEpC,UAAMoE,uBAAiEF,YAAYtM,IACjF,CAACuI,qBAAqB;MACpBxJ,MAAMmJ,OAAOnJ;MACbgJ,aAAayB;MACbjB;MACAH;MACF;AAGF,UAAM5H,YAAW,MAAMe,yBAAyB;MAC9CD,MAAMkL;MACN9M,QAAQ;QAAEuB,WAAWiH,OAAOjH;MAAU;IACxC,CAAA;AAEA,QAAI,UAAUT,WAAU;AAGtB,YAAMiM,sBAAsB1F,cAC1B;QACE7J,IAAI;QACJoK,gBACE;SAEJ;QACEoF,yBAAyBlM,UAAST,KAAK1B,KAAKqO;QAC5CC,cAAcnM,UAAST,KAAK1B,KAAKsO;MACnC,CAAA;AAGF,YAAMC,eAAe;QACnB7N,MAAM;QACNuM,OAAOvE,cACL;UACE7J,IAAI;UACJoK,gBAAgB;WAElB;UACEoF,yBAAyBlM,UAAST,KAAK1B,KAAKqO;UAC5CC,cAAcnM,UAAST,KAAK1B,KAAKsO;QACnC,CAAA;QAEFrC,SAAS9J,UAAST,KAAK1B,KAAKqO,0BAA0BD,sBAAsB;MAC9E;AAEA3C,yBAAmB8C,YAAAA;AAEnB,aAAO;IACT;AAEA,QAAI,WAAWpM,WAAU;AACvB,UAAI6J,aAAa7J,UAASO,KAAK,GAAG;AAEhC+I,2BAAmB;UACjB/K,MAAM;UACNuL,SAASN,eAAexJ,UAASO,KAAK;QACxC,CAAA;aACK;AAEL+I,2BAAmB;UACjB/K,MAAM;UACNuL,SAASvD,cAAc;YAAE7J,IAAI;YAAsBoK,gBAAgB;UAAoB,CAAA;QACzF,CAAA;MACF;IACF;EACF;AAEA,MAAI,CAAC8E,aAAa,CAACD,WAAY,QAAO;AAEtC,SAAO;IACLtI,YAAY;IACZ+D,SAAS;IACTuD,OAAOpE,cAAc;MACnB7J,IAAI;MACJoK,gBAAgB;IAClB,CAAA;IACA+D,QAAQ;MACNtM,MAAM;MACNuM,OAAOvE,cAAc;QACnB7J,IAAI;QACJoK,gBAAgB;MAClB,CAAA;MACAD,SAAS,CAAC,EAAE8C,QAAO,MAAE;AACnB,mBACE7E,yBAACuH,QAAAA;UACCnC,UAAU,OAAOxC,WAAAA;AACf,kBAAMnI,OAAO,MAAMmK,aAAahC,MAAAA;AAChC,gBAAInI,MAAM;AACR,qBAAOoK,QAAAA;YACT;UACF;UACAM,kBAAkBlE;UAClBiE,eAAe3D;UAEd,UAAA,CAAC,EAAEqB,QAAQqD,cAAa,UACvBzF,0BAACgH,MAAAA;;eACErE,qCAAUC,YAAW,QACpBpD,yBAACwB,YAED,CAAA,CAAA,QAAAxB,yBAACmG,MAAMsB,MAAI;gBACT,cAAAjH,0BAACQ,MAAAA;kBAAKqC,WAAU;kBAASC,YAAW;kBAAUC,KAAK;;wBACjDvD,yBAACwD,KAAAA;sBAAIC,eAAe;oCAClBjD,0BAAC7B,MAAMC,MAAI;wBAAC0C,UAAQ;;8BAClBtB,yBAACrB,MAAM8B,OAAK;sCACTgB,cAAc;8BACb7J,IAAI;8BACJoK,gBAAgB;4BAClB,CAAA;;8BAEFhC,yBAAC0D,cAAAA;4BACCC,aAAalC,cAAc;8BACzB7J,IAAI;8BACJoK,gBAAgB;4BAClB,CAAA;4BACAnB,UAAU,CAACC,UAAUmF,cAAc,aAAanF,KAAAA;4BAChDA,OAAO8B,OAAOjH;sCAEbwH,qCAAUzI,IAAI,CAACkJ,gBACd5D,yBAAC6D,oBAAAA;8BAAoC/C,OAAO8C,QAAQhM;8BACjDgM,UAAAA,QAAQ9D;4BADc8D,GAAAA,QAAQhM,EAAE;;;;;wBAO3CoI,yBAACrB,MAAM8B,OAAK;gCACTgB,cAAc;wBACb7J,IAAI;wBACJoK,gBAAgB;sBAClB,CAAA;;wBAEFhC,yBAACe,sBAAAA;sBACCnB,UAAUgD,OAAOnJ;sBACjBoG,cAAc,CAACiE,MAAMmC,cAAc,QAAQnC,EAAEC,OAAOjD,KAAK;sBACzDhB,MAAK;;;;;kBAKbU,0BAAC2F,MAAMC,QAAM;;sBACXpG,yBAACqG,QAAAA;oBAAOC,SAASzB;oBAASvC,SAAQ;oBAAWxC,MAAK;8BAC/C2B,cAAc;sBACb7J,IAAI;sBACJoK,gBAAgB;oBAClB,CAAA;;sBAKFhC,yBAACqG,QAAAA;oBAAO5M,MAAK;oBAASsG,UAAU,CAAC6C,OAAOjH;oBAAW4K,SAAShC;8BACzD9C,cAAc;sBACb7J,IAAI;sBACJoK,gBAAgB;oBAClB,CAAA;;;;;;;MAOd;IACF;EACF;AACF;ACtNA,IAAM0F,kBAAkB,CAACC,gBAAiCjF,eAAAA;;AACxD,QAAMkF,eAAeC,SAAS,YAAY,CAACC,UAAUA,MAAMC,IAAI;AAC/D,QAAMf,cAAcY,aAAalN,IAAI,CAACsN,UAAUA,MAAMtF,UAAU;AAChE,QAAM,CAAC,EAAEvI,MAAK,CAAE,IAAI0I,eAAAA;AACpB,QAAMC,WAAU3I,0CAAuB4I,YAAvB5I,mBAAgC6I,SAAhC7I,mBAAsC2I,WAAUmF;AAEhE,QAAM/M,WAAWiD,mCACf;IAAEwJ;IAAgBX;IAAalE;KAC/B;IAAEoF,MAAM,CAAClB,eAAe,CAACW,kBAAkBX,YAAY5D,WAAW;EAAE,CAAA;AAGtE,QAAM+E,0BAA0BjN,SAAST,QAAQ,CAAA;AAEjD,UAAO0N,mEAA0BzF,gBAAe,CAAA;AAClD;AAWA,IAAM0F,uBAAuB,CAAC,EAAEC,kBAAkBC,OAAM,MAA4B;AAClF,QAAM,EAAE/C,QAAO,IAAK+C;AAEpB,MAAI,EAAC/C,mCAASK,kBAAiB;AAC7B,WAAO;MAAEyC;MAAkBC;IAAO;EACpC;AAEA,SAAO;IACLD,kBAAkB;MACbA,GAAAA;MACH;QACEE,YAAY;QACZC,UAAU;QACV1I,MAAM;QACN+F,OAAO;UACLjO,IAAI;UACJoK,gBAAgB;QAClB;QACAyG,eAAe,CACbC,OACAC,GACA,EAAEzE,MAAK,UACJlE,yBAAC4I,iBAAAA;UAAiB,GAAGF;UAAOxE;;MACnC;IACD;IACDoE;EACF;AACF;AAWA,IAAMM,kBAAkB,CAAC,EAAElG,YAAYwB,MAAK,MAAwB;AAClE,QAAMf,WAAWuE,gBAAgBxD,OAAOxB,UAAAA;AACxC,QAAM,EAAEjB,cAAa,IAAKC,QAAAA;AAE1B,aACElB,0BAACqI,QAAQjK,MAAI;;UACXoB,yBAAC6I,QAAQC,SAAO;QACd,cAAA9I,yBAACqG,QAAAA;UACC/D,SAAQ;UACRgE,SAAS,CAACxC,MAAqCA,EAAEiF,gBAAe;;UAEhEC,SAAS7F,SAASC,SAAS,QAAIpD,yBAACiJ,eAAAA;YAAUnH,OAAM;YAASoH,QAAO;UAAc,CAAA,IAAA;UAE9E,cAAAlJ,yBAACmJ,YAAAA;YACCC,OAAO;cAAEC,UAAU;cAAShJ,QAAQ;YAAU;YAC9CiJ,WAAU;YACVC,YAAW;sBAEVpG,SAASC,SAAS,IACf3B,cACE;cACE7J,IAAI;cACJoK,gBAAgB;eAElB;cACEwH,QAAQrG,SAASC;aAGrB,IAAA;;;;UAIVpD,yBAAC6I,QAAQY,SAAO;QACd,cAAAzJ,yBAAC0J,MAAAA;oBACEvG,SAASzI,IAAI,CAAC,EAAE9C,IAAIkI,KAAI,UACvBE,yBAACwD,KAAAA;YAAamG,SAAS;YAAGvH,KAAI;YAC5B,cAAApC,yBAAC4J,OAAAA;cAAKC,MAAM,mCAAmCjS,EAAAA;cAAMkS,YAAY;cAC9DhK,UAAAA;;UAFKlI,GAAAA,EAAAA,CAAAA;;;;;AAUtB;ACnIO,IAAMmS,oBAAoB,CAACC,UAAkBC,SAAAA;AAClD,MAAI;AACF,UAAMC,aAAa,IAAIC,KAAKC,eAAe,MAAM;MAC/CC,UAAUL;MACVM,cAAc;KAEbC,EAAAA,cAAcN,IACdO,EAAAA,KAAK,CAACC,SAASA,KAAKhR,SAAS,cAAA;AAEhC,UAAMiR,SAASR,aAAaA,WAAWpJ,QAAQ;AAG/C,QAAI6J,YAAYD,OAAOE,QAAQ,OAAO,KAAA;AAGtC,QAAI,CAACD,UAAUE,SAAS,GAAA,KAAQ,CAACF,UAAUE,SAAS,GAAM,GAAA;AACxDF,kBAAY,GAAGA,SAAU;IAC3B;AAEA,WAAOA;EACT,SAASlP,OAAO;AAEd,WAAO;EACT;AACF;AAOO,IAAMqP,eAAe,CAACC,iBAAAA;AAC3B,QAAMC,eAAkCb,KAAKc,kBAAkB,UAAYvQ,EAAAA,IAAI,CAACsP,aAAAA;AAG9E,UAAMW,YAAYZ,kBAAkBC,UAAUe,YAAAA;AAG9C,WAAO;MAAEL,QAAQC;MAAW7J,OAAO,GAAG6J,SAAAA,IAAaX,QAAAA;IAAW;EAChE,CAAA;AAEA,QAAMkB,iBAAiBF,aAAaR,KAClC,CAACR,aAAaA,SAASlJ,MAAMqK,MAAM,GAAI,EAAC,CAAA,MAAOhB,KAAKC,eAAc,EAAGgB,gBAAe,EAAGf,QAAQ;AAGjG,SAAO;IAAEW;IAAcE;EAAe;AACxC;AC1BA,IAAMG,iBAAiB3M,GAAO4M,KAAKC,IAAI;;kBAErB,CAAC,EAAEzM,OAAO0M,WAAW,UAAS,MAAO1M,MAAME,OAAO,GAAGwM,QAAAA,KAAa,CAAC;;;cAGvE,CAAC,EAAE1M,OAAO0M,WAAW,UAAS,MAAO1M,MAAME,OAAO,GAAGwM,QAAAA,KAAa,CAAC;;;;eAIlE,CAAC,EAAE1M,MAAK,MAAOA,MAAME,OAAOyM,UAAU;;;;;aAKxC,CAAC,EAAE3M,OAAO0M,WAAW,UAAS,MAAO1M,MAAME,OAAO,GAAGwM,QAAAA,KAAa,CAAC;;;;aAInE,CAAC,EAAE1M,OAAO0M,WAAW,UAAS,MAAO1M,MAAME,OAAO,GAAGwM,QAAAA,KAAa,CAAC;;;;;;;;AAiBhF,IAAME,0BAA0B,CAAC,EAAE/P,WAAWQ,SAAQ,MAAgC;AACpF,QAAM,EAAEsF,cAAa,IAAKC,QAAAA;AAC1B,QAAM,EAAE8C,mBAAkB,IAAKC,gBAAAA;AAC/B,QAAM,EAAEC,eAAc,IAAKC,mBAAAA;AAC3B,QAAM,CAAC1H,mBAAAA,IAAuBgB,+BAAAA;AAC9B,QAAM,EACJmG,gBAAgB,EAAEuH,gBAAe,EAAE,IACjCtH,QAAQ7M,WAAAA;AAEZ,QAAMoU,qBAAqB,YAAA;AACzB,UAAM1Q,WAAW,MAAM+B,oBAAoB;MACzC7C,QAAQ;QAAEuB;QAAWQ;MAAS;IAChC,CAAA;AAEA,QAAI,UAAUjB,UAAU;AAEtBsJ,yBAAmB;QACjB/K,MAAM;QACNuL,SAASvD,cAAc;UACrB7J,IAAI;UACJoK,gBAAgB;QAClB,CAAA;MACF,CAAA;AAEA;IACF;AAEA,QAAI,WAAW9G,UAAU;AACvB,UAAI6J,aAAa7J,SAASO,KAAK,GAAG;AAEhC+I,2BAAmB;UACjB/K,MAAM;UACNuL,SAASN,eAAexJ,SAASO,KAAK;QACxC,CAAA;aACK;AAEL+I,2BAAmB;UACjB/K,MAAM;UACNuL,SAASvD,cAAc;YAAE7J,IAAI;YAAsBoK,gBAAgB;UAAoB,CAAA;QACzF,CAAA;MACF;IACF;EACF;AAEA,MAAI,CAAC2J,iBAAiB;AACpB,WAAO;EACT;AAEA,aACE3L,yBAACqL,gBAAAA;IAAeG,UAAS;IAASK,UAAUD;IAC1C,cAAApL,0BAACQ,MAAAA;MAAKuC,KAAK;;YACTvD,yBAAC8L,eAAAA;UAAMhK,OAAM;UAASoH,QAAO;;YAC7BlJ,yBAACmJ,YAAAA;UAAWG,WAAU;UAAYhH,SAAQ;oBACvCb,cAAc;YACb7J,IAAI;YACJoK,gBAAgB;UAClB,CAAA;;;;;AAKV;AAWA,IAAM+J,6BAA6B,CAAC,EAClCpE,gBACAjF,YACAI,OAAM,MAC0B;AAChC,QAAM,EAAErB,cAAa,IAAKC,QAAAA;AAC1B,QAAMsK,kBAAkBC,QAAQ,8BAA8B,CAACnE,UAAUA,MAAMrB,WAAW;AAG1F,QAAMyF,0BAAgCC,cAAQ,MAAA;;AAC5C,UAAMC,oBAAoBJ,gBAAgBxB,KACxC,CAAC6B,eACCA,WAAW1U,YAAYgQ,kBACvB0E,WAAW3U,WAAW,yCAAA;AAG1B,QAAI,CAAC0U,mBAAmB;AACtB,aAAO;IACT;AAEA,WAAOE,QAAQ,CAACxJ,YAAUsJ,6BAAkBtU,eAAlBsU,mBAA8BG,YAA9BH,mBAAuCvB,SAAS/H,QAAAA;KACzE;IAAC6E;IAAgB7E;IAAQkJ;EAAgB,CAAA;AAE5C,QAAM,EACJ5H,gBAAgB,EAAEoI,WAAWC,qBAAoB,EAAE,IACjDpI,QAAQ;IACVqI,mBAAmB;MACjB;QACEhV,QAAQ;QACRC,SAASgQ;MACX;IACD;EACH,CAAA;AAEA,MAAI,CAAC8E,wBAAwB,CAACP,yBAAyB;AACrD,WAAO;EACT;AAEA,aACElM,yBAACqL,gBAAAA;;IAECjJ,KAAKuK;IACLC,QAAM;IACN1K,IAAI;MACFC,UAAU,qCAAqCwF,cAAAA,IAAkBjF,UAAAA;MACjEmK,QAAQ/J,UAAU,0BAA0BA,MAAAA;IAC9C;IAEA,cAAAtC,0BAACQ,MAAAA;MAAKuC,KAAK;;YACTvD,yBAAC8M,eAAAA;UAAOhL,OAAM;UAASoH,QAAO;;YAC9BlJ,yBAACmJ,YAAAA;UAAW7G,SAAQ;oBACjBb,cAAc;YACb7J,IAAI;YACJoK,gBAAgB;UAClB,CAAA;;;;;AAKV;AASA,IAAM+K,kBAAkB,CAAC,EAAEpR,UAAS,MAAwB;AAC1D,QAAM,EAAE8F,cAAa,IAAKC,QAAAA;AAE1B;;QAEE1B,yBAACqL,gBAAAA;MAAejJ,KAAKuK;MAASC,QAAM;MAAC1K,IAAI,6BAA6BvG,SAAAA;MACpE,cAAA6E,0BAACQ,MAAAA;QAAKuC,KAAK;;cACTvD,yBAAC8M,eAAAA;YAAOhL,OAAM;YAASoH,QAAO;;cAC9BlJ,yBAACmJ,YAAAA;YAAWG,WAAU;YAAahH,SAAQ;sBACxCb,cAAc;cACb7J,IAAI;cACJoK,gBAAgB;YAClB,CAAA;;;;;;AAKV;AAWA,IAAMpD,OAAO,CAAC,EAAEoO,SAAQ,MAAa;AACnC,QAAM,EAAEvL,cAAa,IAAKC,QAAAA;AAE1B,QAAM,EAAE0C,eAAc,IAAKC,QAAQ7M,WAAAA;AAEnC;;IAEE4M,eAAeuH,mBAAmBvH,eAAeoI,gBAC/ChM,0BAAC8K,KAAK1M,MAAI;;YACRoB,yBAACiN,kBAAAA;UAAiB3K,SAAQ;UAAW0G,SAAS;UAAMkE,aAAY;UAAMC,cAAa;UACjF,cAAAnN,yBAACoN,gBAAAA;YACCvH,OAAOpE,cAAc;cACnB7J,IAAI;cACJoK,gBAAgB;YAClB,CAAA;YAEA,cAAAhC,yBAACqN,eAAAA,CAAAA,CAAAA;;;YAGLrN,yBAACsL,KAAK7B,SAAO;UAAC6D,KAAK;UAAGC,kBAAiB;UACpCP;;;IAGH,CAAA,IAAA;;AAER;AAEA,IAAMC,mBAAmBvO,GAAO4M,KAAKxC,OAAO;;;;;IAM/B0E,oBAAoB;EAC/B5O;EACAmO;EACArB;EACAK;AACF;ACxPA,IAAM0B,QAAwB,CAAC,EAC7BvJ,OACAD,UACAvB,YACAyB,eAAc,MACM;;AACpB,QAAM,CAAC,EAAEhK,MAAK,CAAE,IAAI0I,eAAAA;AACpB,QAAMC,UAAS3I,iBAAM4I,YAAN5I,mBAAe6I,SAAf7I,mBAAqB2I;AAEpC,QAAM,EACJwC,MAAM,EAAEC,QAAO,EAAE,IACfC,kBAAkBtB,KAAAA;AACtB,QAAM,EAAEzC,eAAeiM,YAAYC,WAAU,IAAKjM,QAAAA;AAElD,QAAM,EAAE0C,eAAc,IAAKC,QAAQ7M,WAAAA;AACnC,QAAM,EAAEoW,SAASjC,gBAAe,IAAKvH;AAErC,QAAMlJ,WAAWsC,4BACf;IACEiF,aAAayB;IACbjB,iBAAiBP;IACjBI;IACAI,kBAAkB;KAEpB;IACEgF,MAAM,CAACjE;EACT,CAAA;AAEF,QAAMd,YAAWjI,cAAST,SAATS,mBAAeT;AAEhC,QAAMoT,yBAAyB,CAC7BtP,YACAuP,UAAAA;AAEA,QAAIvP,eAAe,aAAa;AAC9B,aAAO,YAAYuP,KAAAA;IACrB;AAEA,WAAO,UAAUA,KAAAA;EACnB;AAGA,MAAI,CAACrI,OAAOC,OAAOC,QAAQ,EAACJ,mCAASK,oBAAmB,CAACgI,SAAS;AAChE,WAAO;EACT;AAEA,MAAIzJ,mBAAmB,uBAAuB,CAACzB,cAAcA,eAAe,WAAW;AACrF,WAAO;EACT;AAEA,MAAI,CAACS,YAAYA,SAASC,WAAW,GAAG;AACtC,WAAO;EACT;AAEA,SAAO;IACL4C,OAAOvE,cAAc;MACnB7J,IAAI;MACJoK,gBAAgB;IAClB,CAAA;IACAD,aACE/B,yBAACgB,MAAAA;MAAKqC,WAAU;MAASC,YAAW;MAAUC,KAAK;MAAGzB,OAAM;gBACzDqB,qCAAUzI,IAAI,CAACkJ,gBACdpD,0BAACQ,MAAAA;QAECqC,WAAU;QACVC,YAAW;QACXyK,aAAY;QACZC,aAAY;QACZ9N,aAAa2N,uBAAuBjK,QAAQqK,QAAQ,CAAE,EAACxU,MAAM,KAAA;QAC7DyU,UAAS;QACTC,WAAS;;cAETnO,yBAACwD,KAAAA;YACC4K,YAAY;YACZ3K,eAAe;YACfyJ,aAAa;YACbC,cAAc;YACdlN,YAAY4N,uBAAuBjK,QAAQqK,QAAQ,CAAE,EAACxU,MAAM,KAAA;YAC5DqI,OAAM;YAEN,cAAA9B,yBAACmJ,YAAAA;cACCkF,UAAU;cACV/L,SAAQ;cACRgH,WAAWuE,uBAAuBjK,QAAQqK,QAAQ,CAAE,EAACxU,MAAM,KAAA;wBAE1DgI,cACC;gBACE7J,IAAI;gBACJoK,gBACE;iBAEJ;gBAAEsM,WAAW1K,QAAQqK,QAAQ,CAAE,EAACxU,SAAS;cAAU,CAAA;;;cAIzD+G,0BAACQ,MAAAA;YAAK2I,SAAS;YAAGtG,WAAU;YAASE,KAAK;YAAGzB,OAAM;YAAOwB,YAAW;;kBACnEtD,yBAACmJ,YAAAA;gBAAWkF,UAAU;gBAAG9E,YAAW;gBAAOjH,SAAQ;gBAAQgH,WAAU;gBAClE1F,UAAAA,QAAQ9D;;cAEV8D,QAAQ2K,eAAe3K,QAAQoG,gBAC9BhK,yBAACmJ,YAAAA;gBAAW7G,SAAQ;gBAAKgH,WAAU;0BAChC7H,cACC;kBACE7J,IAAI;kBACJoK,gBAAgB;mBAElB;kBACEiI,MAAMyD,WAAW,IAAIc,KAAK5K,QAAQ2K,WAAW,GAAG;oBAC9CE,KAAK;oBACLC,OAAO;oBACPC,MAAM;oBACNtE,UAAUzG,QAAQoG;kBACpB,CAAA;kBACA4E,MAAMjB,WAAW,IAAIa,KAAK5K,QAAQ2K,WAAW,GAAG;oBAC9CM,WAAW;oBACXxE,UAAUzG,QAAQoG;kBACpB,CAAA;kBACAU,QAAQX,kBAAkBnG,QAAQoG,UAAU,IAAIwE,KAAK5K,QAAQ2K,WAAW,CAAA;gBAC1E,CAAA;;cAIL5C,sBACCnL,0BAACgN,kBAAkB5O,MAAI;gBAACkQ,kBAAgB;;sBACtC9O,yBAACwN,kBAAkBT,iBAAe;oBAACpR,WAAWiI,QAAQhM;;sBACtDoI,yBAACwN,kBAAkB9B,yBAAuB;oBACxC/P,WAAWiI,QAAQhM;oBACnBuE,UAAUyH,QAAQqK,QAAQ,CAAA,EAAGrW;;;cAG/B,CAAA,IAAA;;;;MAnEDgM,GAAAA,QAAQhM,EAAE;;EAyEzB;AACF;ACtJO,IAAMmX,WAAW;ACExB,IAAMC,2BAA2B,CAACC,MAAmBF,cAAAA;AAInD,SAAO9V,OAAOiW,KAAKD,IAAAA,EAAME,OAAO,CAACC,KAAKC,YAAAA;AACpCD,QAAI,GAAGL,SAAAA,IAAYM,OAAQ,EAAC,IAAIJ,KAAKI,OAAQ;AAC7C,WAAOD;EACT,GAAG,CAAA,CAAC;AACN;;;;;;;;;;;;;;;ACQA,IAAME,QAAkC;;EAEtCC,SAASC,KAAc;;AAMrBA,QAAIC,WAAW,6DAAA;AAEf,QAAIhK,OAAOC,OAAOgK,SAASC,UAAU,sBAAyB,GAAA;AAC5DH,UAAII,YAAY;QACd1N,IAAI,WAAW6M,QAAAA;QACfnN,MAAMkE;QACN+J,WAAW;UACTjY,IAAI,GAAGmX,QAAS;UAChB/M,gBAAgB;QAClB;QACA8N,WAAW,MAAM,OAAO,4BAAA,EAAeC,KAAK,CAACC,SAAS;UAAEC,SAASD,IAAIE;UAAI;QACzEzJ,aAAajP,YAAYC;QACzB2I,UAAU;MACZ,CAAA;AAGA,YAAM+P,2BAA2BX,IAAIY,UAAU,iBAAA,EAAmBC;AAClE,UACE,0BAA0BF,4BAC1B,OAAOA,yBAAyBG,yBAAyB,YACzD;AACAH,iCAAyBG,qBAAqB;UAACC;QAAc,CAAA;MAC/D;AAGA,UACE,uBAAuBJ,4BACvB,OAAOA,yBAAyBK,sBAAsB,YACtD;AACAL,iCAAyBK,kBAAkB,CAACvC,YAAAA;AAC1C,gBAAMwC,sBAAsBxC,QAAQyC,UAAU,CAAChZ,WAAWA,OAAO+B,SAAS,WAAA;AAC1EwU,kBAAQ0C,OAAOF,qBAAqB,GAAGzM,sBAAAA;AACvC,iBAAOiK;QACT,CAAA;MACF;AAEAuB,UAAIoB,gBAAgB,UAAU;QAC5BhZ,IAAImX;QACJ7M,IAAI;QACJ2N,WAAW;UACTjY,IAAI,GAAGmX,QAAS;UAChB/M,gBAAgB;QAClB;QACAyE,aAAa,CAAA;QACb,MAAMqJ,YAAAA;AACJ,gBAAM,EAAEe,8BAA6B,IAAK,MAAM,OAAO,6CAAA;AACvD,iBAAO;YAAEZ,SAASY;UAA8B;QAClD;MACF,CAAA;AAEA,UACE,mBAAmBV,4BACnB,OAAOA,yBAAyBW,kBAAkB,YAClD;AACAX,iCAAyBW,cAAc,CAAC7C,YAAAA;AAEtC,gBAAM8C,oBAAoB9C,QAAQyC,UAAU,CAAChZ,WAAWA,OAAO+B,SAAS,QAAA;AAExEwU,kBAAQ0C,OAAOI,mBAAmB,GAAGrK,aAAAA;AACrC,iBAAOuH;QACT,CAAA;MACF;AAGAuB,UAAIwB,aAAa,kDAAkD5I,oBAAAA;IACrE,WACE,CAAC3C,OAAOC,OAAOgK,SAASC,UAAU,sBAClClK,OAAAA,kBAAOC,WAAPD,mBAAewL,UAAfxL,mBAAsByL,YACtB;AACA1B,UAAIoB,gBAAgB,UAAU;QAC5BhZ,IAAImX;QACJ7M,IAAI;QACJ2N,WAAW;UACTjY,IAAI,GAAGmX,QAAS;UAChB/M,gBAAgB;QAClB;QACAyE,aAAa,CAAA;QACb,MAAMqJ,YAAAA;AACJ,gBAAM,EAAEqB,wBAAuB,IAAK,MAAM,OAAO,gDAAA;AACjD,iBAAO;YAAElB,SAASkB;UAAwB;QAC5C;QACAC,aAAa;MACf,CAAA;IACF;EACF;EACA,MAAMC,cAAc,EAAE9E,QAAO,GAAyB;AACpD,UAAM+E,gBAAgB,MAAMC,QAAQC,IAClCjF,QAAQ7R,IAAI,CAACoI,WAAAA;AACX,aAAO,kCAAO,kBAAkBA,MAAO,OAAM,EAC1CiN,KAAK,CAAC,EAAEE,SAASxV,KAAI,MAAE;AACtB,eAAO;UACLA,MAAMuU,yBAAyBvU,MAAM,kBAAA;UACrCqI;QACF;MACF,CAAA,EACC2O,MAAM,MAAA;AACL,eAAO;UACLhX,MAAM,CAAA;UACNqI;QACF;MACF,CAAA;IACJ,CAAA,CAAA;AAGF,WAAOyO,QAAQG,QAAQJ,aAAAA;EACzB;AACF;",
  "names": ["ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "ForwardRef", "PERMISSIONS", "main", "action", "subject", "id", "actionParameters", "properties", "conditions", "create", "update", "delete", "createAction", "deleteAction", "publish", "extendInvalidatesTags", "endpoint", "extraTags", "originalInvalidatesTags", "invalidatesTags", "newInvalidatesTags", "result", "err", "args", "meta", "originalTags", "Object", "assign", "releaseApi", "adminApi", "enhanceEndpoints", "addTagTypes", "endpoints", "updateDocument", "type", "deleteDocument", "deleteManyDocuments", "discardDocument", "createWorkflow", "updateWorkflow", "deleteWorkflow", "injectEndpoints", "build", "getReleasesForEntry", "query", "params", "url", "method", "config", "providesTags", "data", "map", "getReleases", "page", "pageSize", "filters", "releasedAt", "$notNull", "transformResponse", "response", "arg", "releasedAtValue", "isActiveDoneTab", "newResponse", "activeTab", "getRelease", "error", "getReleaseActions", "releaseId", "createRelease", "mutation", "updateRelease", "createReleaseAction", "body", "createManyReleaseActions", "updateReleaseAction", "actionId", "res", "onQueryStarted", "actionPath", "dispatch", "queryFulfilled", "paramsWithoutActionId", "patchResult", "util", "updateQueryData", "draft", "key", "index", "undo", "deleteReleaseAction", "publishRelease", "deleteRelease", "getMappedEntriesInReleases", "getReleaseSettings", "updateReleaseSettings", "useGetReleasesQuery", "useGetReleasesForEntryQuery", "useGetReleaseQuery", "useGetReleaseActionsQuery", "useCreateReleaseMutation", "useCreateReleaseActionMutation", "useCreateManyReleaseActionsMutation", "useUpdateReleaseMutation", "useUpdateReleaseActionMutation", "usePublishReleaseMutation", "useDeleteReleaseActionMutation", "useDeleteReleaseMutation", "useGetMappedEntriesInReleasesQuery", "useGetReleaseSettingsQuery", "useUpdateReleaseSettingsMutation", "getBorderLeftRadiusValue", "actionType", "getBorderRightRadiusValue", "FieldWrapper", "styled", "Field", "Root", "$actionType", "theme", "spaces", "colors", "primary700", "danger600", "primary100", "danger100", "neutral700", "neutral100", "neutral200", "neutral600", "neutral150", "neutral300", "ActionOption", "selected", "handleChange", "name", "disabled", "_jsx", "background", "borderColor", "color", "position", "cursor", "data-checked", "data-disabled", "_jsxs", "Label", "VisuallyHidden", "Input", "checked", "onChange", "value", "ReleaseActionOptions", "Flex", "RELEASE_ACTION_FORM_SCHEMA", "object", "shape", "string", "oneOf", "required", "INITIAL_VALUES", "NoReleases", "formatMessage", "useIntl", "EmptyStateLayout", "icon", "EmptyDocuments", "width", "content", "defaultMessage", "LinkButton", "to", "pathname", "tag", "ReactRouterLink", "variant", "shadow", "AddActionToReleaseModal", "contentType", "documentId", "onInputChange", "values", "useQueryParams", "locale", "plugins", "i18n", "entryDocumentId", "hasEntryAttached", "releases", "length", "direction", "alignItems", "gap", "Box", "paddingBottom", "SingleSelect", "placeholder", "release", "SingleSelectOption", "e", "target", "ReleaseActionModalForm", "document", "model", "collectionType", "allowedActions", "useRBAC", "canCreateAction", "isLoading", "toggleNotification", "useNotification", "formatAPIError", "useAPIErrorHandler", "handleSubmit", "onClose", "formik", "isFetchError", "message", "useFormik", "initialValues", "validationSchema", "onSubmit", "Error", "edit", "options", "useDocumentLayout", "window", "strapi", "isEE", "draftAndPublish", "label", "PaperPlane", "dialog", "title", "setFieldValue", "footer", "Modal", "Footer", "Button", "onClick", "loading", "getContentPermissions", "permissions", "ReleaseAction", "documents", "contentPermissions", "canPublish", "canCreate", "releasePermissions", "documentIds", "doc", "releaseActionEntries", "notificationMessage", "entriesAlreadyInRelease", "totalEntries", "notification", "Formik", "Form", "Body", "useReleasesList", "contentTypeUid", "listViewData", "useTable", "state", "rows", "entry", "undefined", "skip", "mappedEntriesInReleases", "addColumnToTableHook", "displayedHeaders", "layout", "searchable", "sortable", "cellFormatter", "props", "_", "ReleaseListCell", "Popover", "Trigger", "stopPropagation", "endIcon", "CaretDown", "height", "Typography", "style", "maxWidth", "textColor", "fontWeight", "number", "Content", "ul", "padding", "Link", "href", "isExternal", "getTimezoneOffset", "timezone", "date", "offsetPart", "Intl", "DateTimeFormat", "timeZone", "timeZoneName", "formatToParts", "find", "part", "offset", "utcOffset", "replace", "includes", "getTimezones", "selectedDate", "timezoneList", "supportedValuesOf", "systemTimezone", "split", "resolvedOptions", "StyledMenuItem", "Menu", "Item", "$variant", "neutral800", "DeleteReleaseActionItem", "canDeleteAction", "handleDeleteAction", "onSelect", "Cross", "ReleaseActionEntryLinkItem", "userPermissions", "useAuth", "canUpdateEntryForLocale", "useMemo", "updatePermissions", "permission", "Boolean", "locales", "canUpdate", "canUpdateContentType", "updateContentType", "NavLink", "isLink", "search", "Pencil", "EditReleaseItem", "children", "StyledMoreButton", "paddingLeft", "paddingRight", "AccessibleIcon", "More", "top", "popoverPlacement", "ReleaseActionMenu", "Panel", "formatDate", "formatTime", "canRead", "getReleaseColorVariant", "shade", "borderWidth", "borderStyle", "actions", "overflow", "hasRadius", "paddingTop", "fontSize", "isPublish", "scheduledAt", "Date", "day", "month", "year", "time", "hourCycle", "hasTriggerBorder", "pluginId", "prefixPluginTranslations", "trad", "keys", "reduce", "acc", "current", "admin", "register", "app", "createHook", "features", "isEnabled", "addMenuLink", "intlLabel", "Component", "then", "mod", "default", "App", "contentManagerPluginApis", "getPlugin", "apis", "addEditViewSidePanel", "ReleasesPanel", "addDocumentAction", "indexOfDeleteAction", "findIndex", "splice", "addSettingsLink", "ProtectedReleasesSettingsPage", "addBulkAction", "deleteActionIndex", "registerHook", "flags", "promoteEE", "PurchaseContentReleases", "licenseOnly", "registerTrads", "importedTrads", "Promise", "all", "catch", "resolve"]
}
